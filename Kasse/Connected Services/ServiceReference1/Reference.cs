//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kasse.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPersonalbyId", ReplyAction="http://tempuri.org/IService1/getPersonalbyIdResponse")]
        DAL.Personal getPersonalbyId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPersonalbyId", ReplyAction="http://tempuri.org/IService1/getPersonalbyIdResponse")]
        System.Threading.Tasks.Task<DAL.Personal> getPersonalbyIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setPersonal", ReplyAction="http://tempuri.org/IService1/setPersonalResponse")]
        void setPersonal(DAL.Personal person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setPersonal", ReplyAction="http://tempuri.org/IService1/setPersonalResponse")]
        System.Threading.Tasks.Task setPersonalAsync(DAL.Personal person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updatePersonal", ReplyAction="http://tempuri.org/IService1/updatePersonalResponse")]
        void updatePersonal(DAL.Personal personal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updatePersonal", ReplyAction="http://tempuri.org/IService1/updatePersonalResponse")]
        System.Threading.Tasks.Task updatePersonalAsync(DAL.Personal personal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPersonalList", ReplyAction="http://tempuri.org/IService1/getPersonalListResponse")]
        DAL.Personal[] getPersonalList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPersonalList", ReplyAction="http://tempuri.org/IService1/getPersonalListResponse")]
        System.Threading.Tasks.Task<DAL.Personal[]> getPersonalListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPersonalbyRolleId", ReplyAction="http://tempuri.org/IService1/getPersonalbyRolleIdResponse")]
        DAL.Personal[] getPersonalbyRolleId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPersonalbyRolleId", ReplyAction="http://tempuri.org/IService1/getPersonalbyRolleIdResponse")]
        System.Threading.Tasks.Task<DAL.Personal[]> getPersonalbyRolleIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArbeitsvertragbyId", ReplyAction="http://tempuri.org/IService1/getArbeitsvertragbyIdResponse")]
        DAL.Arbeitsvertrag getArbeitsvertragbyId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArbeitsvertragbyId", ReplyAction="http://tempuri.org/IService1/getArbeitsvertragbyIdResponse")]
        System.Threading.Tasks.Task<DAL.Arbeitsvertrag> getArbeitsvertragbyIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setArbeitsvertrag", ReplyAction="http://tempuri.org/IService1/setArbeitsvertragResponse")]
        void setArbeitsvertrag(DAL.Arbeitsvertrag vertrag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setArbeitsvertrag", ReplyAction="http://tempuri.org/IService1/setArbeitsvertragResponse")]
        System.Threading.Tasks.Task setArbeitsvertragAsync(DAL.Arbeitsvertrag vertrag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateArbeitsvertrag", ReplyAction="http://tempuri.org/IService1/updateArbeitsvertragResponse")]
        void updateArbeitsvertrag(DAL.Arbeitsvertrag arbeitsvertrag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateArbeitsvertrag", ReplyAction="http://tempuri.org/IService1/updateArbeitsvertragResponse")]
        System.Threading.Tasks.Task updateArbeitsvertragAsync(DAL.Arbeitsvertrag arbeitsvertrag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArbeitsvertragList", ReplyAction="http://tempuri.org/IService1/getArbeitsvertragListResponse")]
        DAL.Arbeitsvertrag[] getArbeitsvertragList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArbeitsvertragList", ReplyAction="http://tempuri.org/IService1/getArbeitsvertragListResponse")]
        System.Threading.Tasks.Task<DAL.Arbeitsvertrag[]> getArbeitsvertragListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRollebyId", ReplyAction="http://tempuri.org/IService1/getRollebyIdResponse")]
        DAL.Rolle getRollebyId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRollebyId", ReplyAction="http://tempuri.org/IService1/getRollebyIdResponse")]
        System.Threading.Tasks.Task<DAL.Rolle> getRollebyIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setRolle", ReplyAction="http://tempuri.org/IService1/setRolleResponse")]
        void setRolle(DAL.Rolle role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setRolle", ReplyAction="http://tempuri.org/IService1/setRolleResponse")]
        System.Threading.Tasks.Task setRolleAsync(DAL.Rolle role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateRolle", ReplyAction="http://tempuri.org/IService1/updateRolleResponse")]
        void updateRolle(DAL.Rolle rolle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateRolle", ReplyAction="http://tempuri.org/IService1/updateRolleResponse")]
        System.Threading.Tasks.Task updateRolleAsync(DAL.Rolle rolle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRolleList", ReplyAction="http://tempuri.org/IService1/getRolleListResponse")]
        DAL.Rolle[] getRolleList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRolleList", ReplyAction="http://tempuri.org/IService1/getRolleListResponse")]
        System.Threading.Tasks.Task<DAL.Rolle[]> getRolleListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRechtbyId", ReplyAction="http://tempuri.org/IService1/getRechtbyIdResponse")]
        DAL.Recht getRechtbyId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRechtbyId", ReplyAction="http://tempuri.org/IService1/getRechtbyIdResponse")]
        System.Threading.Tasks.Task<DAL.Recht> getRechtbyIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setRecht", ReplyAction="http://tempuri.org/IService1/setRechtResponse")]
        void setRecht(DAL.Recht recht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setRecht", ReplyAction="http://tempuri.org/IService1/setRechtResponse")]
        System.Threading.Tasks.Task setRechtAsync(DAL.Recht recht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateRecht", ReplyAction="http://tempuri.org/IService1/updateRechtResponse")]
        void updateRecht(DAL.Recht recht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateRecht", ReplyAction="http://tempuri.org/IService1/updateRechtResponse")]
        System.Threading.Tasks.Task updateRechtAsync(DAL.Recht recht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setRolleRecht", ReplyAction="http://tempuri.org/IService1/setRolleRechtResponse")]
        void setRolleRecht(DAL.Rolle rolle, DAL.Recht recht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setRolleRecht", ReplyAction="http://tempuri.org/IService1/setRolleRechtResponse")]
        System.Threading.Tasks.Task setRolleRechtAsync(DAL.Rolle rolle, DAL.Recht recht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateRolleRecht", ReplyAction="http://tempuri.org/IService1/updateRolleRechtResponse")]
        void updateRolleRecht(DAL.RolleRecht rollerecht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateRolleRecht", ReplyAction="http://tempuri.org/IService1/updateRolleRechtResponse")]
        System.Threading.Tasks.Task updateRolleRechtAsync(DAL.RolleRecht rollerecht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRollefromRechtId", ReplyAction="http://tempuri.org/IService1/getRollefromRechtIdResponse")]
        DAL.Rolle[] getRollefromRechtId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRollefromRechtId", ReplyAction="http://tempuri.org/IService1/getRollefromRechtIdResponse")]
        System.Threading.Tasks.Task<DAL.Rolle[]> getRollefromRechtIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRechtfromRolleId", ReplyAction="http://tempuri.org/IService1/getRechtfromRolleIdResponse")]
        DAL.Recht[] getRechtfromRolleId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRechtfromRolleId", ReplyAction="http://tempuri.org/IService1/getRechtfromRolleIdResponse")]
        System.Threading.Tasks.Task<DAL.Recht[]> getRechtfromRolleIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSchichtbyId", ReplyAction="http://tempuri.org/IService1/getSchichtbyIdResponse")]
        DAL.Schicht getSchichtbyId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSchichtbyId", ReplyAction="http://tempuri.org/IService1/getSchichtbyIdResponse")]
        System.Threading.Tasks.Task<DAL.Schicht> getSchichtbyIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setSchicht", ReplyAction="http://tempuri.org/IService1/setSchichtResponse")]
        void setSchicht(DAL.Schicht schicht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setSchicht", ReplyAction="http://tempuri.org/IService1/setSchichtResponse")]
        System.Threading.Tasks.Task setSchichtAsync(DAL.Schicht schicht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateSchicht", ReplyAction="http://tempuri.org/IService1/updateSchichtResponse")]
        void updateSchicht(DAL.Schicht schicht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateSchicht", ReplyAction="http://tempuri.org/IService1/updateSchichtResponse")]
        System.Threading.Tasks.Task updateSchichtAsync(DAL.Schicht schicht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSchichtbyPersonalId", ReplyAction="http://tempuri.org/IService1/getSchichtbyPersonalIdResponse")]
        DAL.Schicht[] getSchichtbyPersonalId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSchichtbyPersonalId", ReplyAction="http://tempuri.org/IService1/getSchichtbyPersonalIdResponse")]
        System.Threading.Tasks.Task<DAL.Schicht[]> getSchichtbyPersonalIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSchichtBetween", ReplyAction="http://tempuri.org/IService1/getSchichtBetweenResponse")]
        DAL.Schicht[] getSchichtBetween(System.DateTime von, System.DateTime bis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSchichtBetween", ReplyAction="http://tempuri.org/IService1/getSchichtBetweenResponse")]
        System.Threading.Tasks.Task<DAL.Schicht[]> getSchichtBetweenAsync(System.DateTime von, System.DateTime bis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSchichtByPersonalIdAndBetween", ReplyAction="http://tempuri.org/IService1/getSchichtByPersonalIdAndBetweenResponse")]
        DAL.Schicht[] getSchichtByPersonalIdAndBetween(int id, System.DateTime von, System.DateTime bis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSchichtByPersonalIdAndBetween", ReplyAction="http://tempuri.org/IService1/getSchichtByPersonalIdAndBetweenResponse")]
        System.Threading.Tasks.Task<DAL.Schicht[]> getSchichtByPersonalIdAndBetweenAsync(int id, System.DateTime von, System.DateTime bis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLieferantbyId", ReplyAction="http://tempuri.org/IService1/getLieferantbyIdResponse")]
        DAL.Lieferant getLieferantbyId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLieferantbyId", ReplyAction="http://tempuri.org/IService1/getLieferantbyIdResponse")]
        System.Threading.Tasks.Task<DAL.Lieferant> getLieferantbyIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setLieferant", ReplyAction="http://tempuri.org/IService1/setLieferantResponse")]
        void setLieferant(DAL.Lieferant lieferant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setLieferant", ReplyAction="http://tempuri.org/IService1/setLieferantResponse")]
        System.Threading.Tasks.Task setLieferantAsync(DAL.Lieferant lieferant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateLieferant", ReplyAction="http://tempuri.org/IService1/updateLieferantResponse")]
        void updateLieferant(DAL.Lieferant lieferant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateLieferant", ReplyAction="http://tempuri.org/IService1/updateLieferantResponse")]
        System.Threading.Tasks.Task updateLieferantAsync(DAL.Lieferant lieferant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLieferantList", ReplyAction="http://tempuri.org/IService1/getLieferantListResponse")]
        DAL.Lieferant[] getLieferantList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLieferantList", ReplyAction="http://tempuri.org/IService1/getLieferantListResponse")]
        System.Threading.Tasks.Task<DAL.Lieferant[]> getLieferantListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelbyId", ReplyAction="http://tempuri.org/IService1/getArtikelbyIdResponse")]
        DAL.Artikel getArtikelbyId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelbyId", ReplyAction="http://tempuri.org/IService1/getArtikelbyIdResponse")]
        System.Threading.Tasks.Task<DAL.Artikel> getArtikelbyIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelByGTIN", ReplyAction="http://tempuri.org/IService1/getArtikelByGTINResponse")]
        DAL.Artikel getArtikelByGTIN(string GTIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelByGTIN", ReplyAction="http://tempuri.org/IService1/getArtikelByGTINResponse")]
        System.Threading.Tasks.Task<DAL.Artikel> getArtikelByGTINAsync(string GTIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setArtikel", ReplyAction="http://tempuri.org/IService1/setArtikelResponse")]
        void setArtikel(DAL.Artikel artikel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setArtikel", ReplyAction="http://tempuri.org/IService1/setArtikelResponse")]
        System.Threading.Tasks.Task setArtikelAsync(DAL.Artikel artikel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateArtikel", ReplyAction="http://tempuri.org/IService1/updateArtikelResponse")]
        void updateArtikel(DAL.Artikel artikel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateArtikel", ReplyAction="http://tempuri.org/IService1/updateArtikelResponse")]
        System.Threading.Tasks.Task updateArtikelAsync(DAL.Artikel artikel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelList", ReplyAction="http://tempuri.org/IService1/getArtikelListResponse")]
        DAL.Artikel[] getArtikelList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelList", ReplyAction="http://tempuri.org/IService1/getArtikelListResponse")]
        System.Threading.Tasks.Task<DAL.Artikel[]> getArtikelListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelbyLieferantId", ReplyAction="http://tempuri.org/IService1/getArtikelbyLieferantIdResponse")]
        DAL.Artikel[] getArtikelbyLieferantId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelbyLieferantId", ReplyAction="http://tempuri.org/IService1/getArtikelbyLieferantIdResponse")]
        System.Threading.Tasks.Task<DAL.Artikel[]> getArtikelbyLieferantIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelbyWarengruppeId", ReplyAction="http://tempuri.org/IService1/getArtikelbyWarengruppeIdResponse")]
        DAL.Artikel[] getArtikelbyWarengruppeId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelbyWarengruppeId", ReplyAction="http://tempuri.org/IService1/getArtikelbyWarengruppeIdResponse")]
        System.Threading.Tasks.Task<DAL.Artikel[]> getArtikelbyWarengruppeIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getBelegbyId", ReplyAction="http://tempuri.org/IService1/getBelegbyIdResponse")]
        DAL.Beleg getBelegbyId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getBelegbyId", ReplyAction="http://tempuri.org/IService1/getBelegbyIdResponse")]
        System.Threading.Tasks.Task<DAL.Beleg> getBelegbyIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setBeleg", ReplyAction="http://tempuri.org/IService1/setBelegResponse")]
        void setBeleg(DAL.Beleg beleg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setBeleg", ReplyAction="http://tempuri.org/IService1/setBelegResponse")]
        System.Threading.Tasks.Task setBelegAsync(DAL.Beleg beleg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateBeleg", ReplyAction="http://tempuri.org/IService1/updateBelegResponse")]
        void updateBeleg(DAL.Beleg beleg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateBeleg", ReplyAction="http://tempuri.org/IService1/updateBelegResponse")]
        System.Threading.Tasks.Task updateBelegAsync(DAL.Beleg beleg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getBelegList", ReplyAction="http://tempuri.org/IService1/getBelegListResponse")]
        DAL.Beleg[] getBelegList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getBelegList", ReplyAction="http://tempuri.org/IService1/getBelegListResponse")]
        System.Threading.Tasks.Task<DAL.Beleg[]> getBelegListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelCountByArtikelIdAndLieferartIdAndBetween", ReplyAction="http://tempuri.org/IService1/getArtikelCountByArtikelIdAndLieferartIdAndBetweenRe" +
            "sponse")]
        int getArtikelCountByArtikelIdAndLieferartIdAndBetween(int artikel_id, int lieferart_id, System.DateTime von, System.DateTime bis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelCountByArtikelIdAndLieferartIdAndBetween", ReplyAction="http://tempuri.org/IService1/getArtikelCountByArtikelIdAndLieferartIdAndBetweenRe" +
            "sponse")]
        System.Threading.Tasks.Task<int> getArtikelCountByArtikelIdAndLieferartIdAndBetweenAsync(int artikel_id, int lieferart_id, System.DateTime von, System.DateTime bis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setArtikelBeleg", ReplyAction="http://tempuri.org/IService1/setArtikelBelegResponse")]
        void setArtikelBeleg(DAL.Artikel artikel, DAL.Beleg beleg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setArtikelBeleg", ReplyAction="http://tempuri.org/IService1/setArtikelBelegResponse")]
        System.Threading.Tasks.Task setArtikelBelegAsync(DAL.Artikel artikel, DAL.Beleg beleg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateArtikelBeleg", ReplyAction="http://tempuri.org/IService1/updateArtikelBelegResponse")]
        void updateArtikelBeleg(DAL.ArtikelBeleg artikelbeleg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateArtikelBeleg", ReplyAction="http://tempuri.org/IService1/updateArtikelBelegResponse")]
        System.Threading.Tasks.Task updateArtikelBelegAsync(DAL.ArtikelBeleg artikelbeleg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelfromBelegId", ReplyAction="http://tempuri.org/IService1/getArtikelfromBelegIdResponse")]
        DAL.Artikel[] getArtikelfromBelegId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelfromBelegId", ReplyAction="http://tempuri.org/IService1/getArtikelfromBelegIdResponse")]
        System.Threading.Tasks.Task<DAL.Artikel[]> getArtikelfromBelegIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getBelegfromArtikelId", ReplyAction="http://tempuri.org/IService1/getBelegfromArtikelIdResponse")]
        DAL.Beleg[] getBelegfromArtikelId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getBelegfromArtikelId", ReplyAction="http://tempuri.org/IService1/getBelegfromArtikelIdResponse")]
        System.Threading.Tasks.Task<DAL.Beleg[]> getBelegfromArtikelIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getWarengruppebyId", ReplyAction="http://tempuri.org/IService1/getWarengruppebyIdResponse")]
        DAL.Warengruppe getWarengruppebyId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getWarengruppebyId", ReplyAction="http://tempuri.org/IService1/getWarengruppebyIdResponse")]
        System.Threading.Tasks.Task<DAL.Warengruppe> getWarengruppebyIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setWarengruppe", ReplyAction="http://tempuri.org/IService1/setWarengruppeResponse")]
        void setWarengruppe(DAL.Warengruppe gruppe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setWarengruppe", ReplyAction="http://tempuri.org/IService1/setWarengruppeResponse")]
        System.Threading.Tasks.Task setWarengruppeAsync(DAL.Warengruppe gruppe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateWarengruppe", ReplyAction="http://tempuri.org/IService1/updateWarengruppeResponse")]
        void updateWarengruppe(DAL.Warengruppe warengruppe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateWarengruppe", ReplyAction="http://tempuri.org/IService1/updateWarengruppeResponse")]
        System.Threading.Tasks.Task updateWarengruppeAsync(DAL.Warengruppe warengruppe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getWarengruppeList", ReplyAction="http://tempuri.org/IService1/getWarengruppeListResponse")]
        DAL.Warengruppe[] getWarengruppeList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getWarengruppeList", ReplyAction="http://tempuri.org/IService1/getWarengruppeListResponse")]
        System.Threading.Tasks.Task<DAL.Warengruppe[]> getWarengruppeListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getWarengruppebyName", ReplyAction="http://tempuri.org/IService1/getWarengruppebyNameResponse")]
        DAL.Warengruppe getWarengruppebyName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getWarengruppebyName", ReplyAction="http://tempuri.org/IService1/getWarengruppebyNameResponse")]
        System.Threading.Tasks.Task<DAL.Warengruppe> getWarengruppebyNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPrognosebyId", ReplyAction="http://tempuri.org/IService1/getPrognosebyIdResponse")]
        DAL.Prognose getPrognosebyId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPrognosebyId", ReplyAction="http://tempuri.org/IService1/getPrognosebyIdResponse")]
        System.Threading.Tasks.Task<DAL.Prognose> getPrognosebyIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setPrognose", ReplyAction="http://tempuri.org/IService1/setPrognoseResponse")]
        void setPrognose(DAL.Prognose prognose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setPrognose", ReplyAction="http://tempuri.org/IService1/setPrognoseResponse")]
        System.Threading.Tasks.Task setPrognoseAsync(DAL.Prognose prognose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updatePrognose", ReplyAction="http://tempuri.org/IService1/updatePrognoseResponse")]
        void updatePrognose(DAL.Prognose prognose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updatePrognose", ReplyAction="http://tempuri.org/IService1/updatePrognoseResponse")]
        System.Threading.Tasks.Task updatePrognoseAsync(DAL.Prognose prognose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPrognoseList", ReplyAction="http://tempuri.org/IService1/getPrognoseListResponse")]
        DAL.Prognose[] getPrognoseList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPrognoseList", ReplyAction="http://tempuri.org/IService1/getPrognoseListResponse")]
        System.Threading.Tasks.Task<DAL.Prognose[]> getPrognoseListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPrognosebyArtikelId", ReplyAction="http://tempuri.org/IService1/getPrognosebyArtikelIdResponse")]
        DAL.Prognose getPrognosebyArtikelId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPrognosebyArtikelId", ReplyAction="http://tempuri.org/IService1/getPrognosebyArtikelIdResponse")]
        System.Threading.Tasks.Task<DAL.Prognose> getPrognosebyArtikelIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPrognosebyDate", ReplyAction="http://tempuri.org/IService1/getPrognosebyDateResponse")]
        DAL.Prognose[] getPrognosebyDate(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPrognosebyDate", ReplyAction="http://tempuri.org/IService1/getPrognosebyDateResponse")]
        System.Threading.Tasks.Task<DAL.Prognose[]> getPrognosebyDateAsync(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLieferartbyId", ReplyAction="http://tempuri.org/IService1/getLieferartbyIdResponse")]
        DAL.Lieferart getLieferartbyId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLieferartbyId", ReplyAction="http://tempuri.org/IService1/getLieferartbyIdResponse")]
        System.Threading.Tasks.Task<DAL.Lieferart> getLieferartbyIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLieferartByName", ReplyAction="http://tempuri.org/IService1/getLieferartByNameResponse")]
        DAL.Lieferart getLieferartByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLieferartByName", ReplyAction="http://tempuri.org/IService1/getLieferartByNameResponse")]
        System.Threading.Tasks.Task<DAL.Lieferart> getLieferartByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setLieferart", ReplyAction="http://tempuri.org/IService1/setLieferartResponse")]
        void setLieferart(DAL.Lieferart lieferart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setLieferart", ReplyAction="http://tempuri.org/IService1/setLieferartResponse")]
        System.Threading.Tasks.Task setLieferartAsync(DAL.Lieferart lieferart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateLieferart", ReplyAction="http://tempuri.org/IService1/updateLieferartResponse")]
        void updateLieferart(DAL.Lieferart lieferart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateLieferart", ReplyAction="http://tempuri.org/IService1/updateLieferartResponse")]
        System.Threading.Tasks.Task updateLieferartAsync(DAL.Lieferart lieferart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLieferartList", ReplyAction="http://tempuri.org/IService1/getLieferartListResponse")]
        DAL.Lieferart[] getLieferartList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLieferartList", ReplyAction="http://tempuri.org/IService1/getLieferartListResponse")]
        System.Threading.Tasks.Task<DAL.Lieferart[]> getLieferartListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Kasse.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Kasse.ServiceReference1.IService1>, Kasse.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DAL.Personal getPersonalbyId(int id) {
            return base.Channel.getPersonalbyId(id);
        }
        
        public System.Threading.Tasks.Task<DAL.Personal> getPersonalbyIdAsync(int id) {
            return base.Channel.getPersonalbyIdAsync(id);
        }
        
        public void setPersonal(DAL.Personal person) {
            base.Channel.setPersonal(person);
        }
        
        public System.Threading.Tasks.Task setPersonalAsync(DAL.Personal person) {
            return base.Channel.setPersonalAsync(person);
        }
        
        public void updatePersonal(DAL.Personal personal) {
            base.Channel.updatePersonal(personal);
        }
        
        public System.Threading.Tasks.Task updatePersonalAsync(DAL.Personal personal) {
            return base.Channel.updatePersonalAsync(personal);
        }
        
        public DAL.Personal[] getPersonalList() {
            return base.Channel.getPersonalList();
        }
        
        public System.Threading.Tasks.Task<DAL.Personal[]> getPersonalListAsync() {
            return base.Channel.getPersonalListAsync();
        }
        
        public DAL.Personal[] getPersonalbyRolleId(int id) {
            return base.Channel.getPersonalbyRolleId(id);
        }
        
        public System.Threading.Tasks.Task<DAL.Personal[]> getPersonalbyRolleIdAsync(int id) {
            return base.Channel.getPersonalbyRolleIdAsync(id);
        }
        
        public DAL.Arbeitsvertrag getArbeitsvertragbyId(int id) {
            return base.Channel.getArbeitsvertragbyId(id);
        }
        
        public System.Threading.Tasks.Task<DAL.Arbeitsvertrag> getArbeitsvertragbyIdAsync(int id) {
            return base.Channel.getArbeitsvertragbyIdAsync(id);
        }
        
        public void setArbeitsvertrag(DAL.Arbeitsvertrag vertrag) {
            base.Channel.setArbeitsvertrag(vertrag);
        }
        
        public System.Threading.Tasks.Task setArbeitsvertragAsync(DAL.Arbeitsvertrag vertrag) {
            return base.Channel.setArbeitsvertragAsync(vertrag);
        }
        
        public void updateArbeitsvertrag(DAL.Arbeitsvertrag arbeitsvertrag) {
            base.Channel.updateArbeitsvertrag(arbeitsvertrag);
        }
        
        public System.Threading.Tasks.Task updateArbeitsvertragAsync(DAL.Arbeitsvertrag arbeitsvertrag) {
            return base.Channel.updateArbeitsvertragAsync(arbeitsvertrag);
        }
        
        public DAL.Arbeitsvertrag[] getArbeitsvertragList() {
            return base.Channel.getArbeitsvertragList();
        }
        
        public System.Threading.Tasks.Task<DAL.Arbeitsvertrag[]> getArbeitsvertragListAsync() {
            return base.Channel.getArbeitsvertragListAsync();
        }
        
        public DAL.Rolle getRollebyId(int id) {
            return base.Channel.getRollebyId(id);
        }
        
        public System.Threading.Tasks.Task<DAL.Rolle> getRollebyIdAsync(int id) {
            return base.Channel.getRollebyIdAsync(id);
        }
        
        public void setRolle(DAL.Rolle role) {
            base.Channel.setRolle(role);
        }
        
        public System.Threading.Tasks.Task setRolleAsync(DAL.Rolle role) {
            return base.Channel.setRolleAsync(role);
        }
        
        public void updateRolle(DAL.Rolle rolle) {
            base.Channel.updateRolle(rolle);
        }
        
        public System.Threading.Tasks.Task updateRolleAsync(DAL.Rolle rolle) {
            return base.Channel.updateRolleAsync(rolle);
        }
        
        public DAL.Rolle[] getRolleList() {
            return base.Channel.getRolleList();
        }
        
        public System.Threading.Tasks.Task<DAL.Rolle[]> getRolleListAsync() {
            return base.Channel.getRolleListAsync();
        }
        
        public DAL.Recht getRechtbyId(int id) {
            return base.Channel.getRechtbyId(id);
        }
        
        public System.Threading.Tasks.Task<DAL.Recht> getRechtbyIdAsync(int id) {
            return base.Channel.getRechtbyIdAsync(id);
        }
        
        public void setRecht(DAL.Recht recht) {
            base.Channel.setRecht(recht);
        }
        
        public System.Threading.Tasks.Task setRechtAsync(DAL.Recht recht) {
            return base.Channel.setRechtAsync(recht);
        }
        
        public void updateRecht(DAL.Recht recht) {
            base.Channel.updateRecht(recht);
        }
        
        public System.Threading.Tasks.Task updateRechtAsync(DAL.Recht recht) {
            return base.Channel.updateRechtAsync(recht);
        }
        
        public void setRolleRecht(DAL.Rolle rolle, DAL.Recht recht) {
            base.Channel.setRolleRecht(rolle, recht);
        }
        
        public System.Threading.Tasks.Task setRolleRechtAsync(DAL.Rolle rolle, DAL.Recht recht) {
            return base.Channel.setRolleRechtAsync(rolle, recht);
        }
        
        public void updateRolleRecht(DAL.RolleRecht rollerecht) {
            base.Channel.updateRolleRecht(rollerecht);
        }
        
        public System.Threading.Tasks.Task updateRolleRechtAsync(DAL.RolleRecht rollerecht) {
            return base.Channel.updateRolleRechtAsync(rollerecht);
        }
        
        public DAL.Rolle[] getRollefromRechtId(int id) {
            return base.Channel.getRollefromRechtId(id);
        }
        
        public System.Threading.Tasks.Task<DAL.Rolle[]> getRollefromRechtIdAsync(int id) {
            return base.Channel.getRollefromRechtIdAsync(id);
        }
        
        public DAL.Recht[] getRechtfromRolleId(int id) {
            return base.Channel.getRechtfromRolleId(id);
        }
        
        public System.Threading.Tasks.Task<DAL.Recht[]> getRechtfromRolleIdAsync(int id) {
            return base.Channel.getRechtfromRolleIdAsync(id);
        }
        
        public DAL.Schicht getSchichtbyId(int id) {
            return base.Channel.getSchichtbyId(id);
        }
        
        public System.Threading.Tasks.Task<DAL.Schicht> getSchichtbyIdAsync(int id) {
            return base.Channel.getSchichtbyIdAsync(id);
        }
        
        public void setSchicht(DAL.Schicht schicht) {
            base.Channel.setSchicht(schicht);
        }
        
        public System.Threading.Tasks.Task setSchichtAsync(DAL.Schicht schicht) {
            return base.Channel.setSchichtAsync(schicht);
        }
        
        public void updateSchicht(DAL.Schicht schicht) {
            base.Channel.updateSchicht(schicht);
        }
        
        public System.Threading.Tasks.Task updateSchichtAsync(DAL.Schicht schicht) {
            return base.Channel.updateSchichtAsync(schicht);
        }
        
        public DAL.Schicht[] getSchichtbyPersonalId(int id) {
            return base.Channel.getSchichtbyPersonalId(id);
        }
        
        public System.Threading.Tasks.Task<DAL.Schicht[]> getSchichtbyPersonalIdAsync(int id) {
            return base.Channel.getSchichtbyPersonalIdAsync(id);
        }
        
        public DAL.Schicht[] getSchichtBetween(System.DateTime von, System.DateTime bis) {
            return base.Channel.getSchichtBetween(von, bis);
        }
        
        public System.Threading.Tasks.Task<DAL.Schicht[]> getSchichtBetweenAsync(System.DateTime von, System.DateTime bis) {
            return base.Channel.getSchichtBetweenAsync(von, bis);
        }
        
        public DAL.Schicht[] getSchichtByPersonalIdAndBetween(int id, System.DateTime von, System.DateTime bis) {
            return base.Channel.getSchichtByPersonalIdAndBetween(id, von, bis);
        }
        
        public System.Threading.Tasks.Task<DAL.Schicht[]> getSchichtByPersonalIdAndBetweenAsync(int id, System.DateTime von, System.DateTime bis) {
            return base.Channel.getSchichtByPersonalIdAndBetweenAsync(id, von, bis);
        }
        
        public DAL.Lieferant getLieferantbyId(int id) {
            return base.Channel.getLieferantbyId(id);
        }
        
        public System.Threading.Tasks.Task<DAL.Lieferant> getLieferantbyIdAsync(int id) {
            return base.Channel.getLieferantbyIdAsync(id);
        }
        
        public void setLieferant(DAL.Lieferant lieferant) {
            base.Channel.setLieferant(lieferant);
        }
        
        public System.Threading.Tasks.Task setLieferantAsync(DAL.Lieferant lieferant) {
            return base.Channel.setLieferantAsync(lieferant);
        }
        
        public void updateLieferant(DAL.Lieferant lieferant) {
            base.Channel.updateLieferant(lieferant);
        }
        
        public System.Threading.Tasks.Task updateLieferantAsync(DAL.Lieferant lieferant) {
            return base.Channel.updateLieferantAsync(lieferant);
        }
        
        public DAL.Lieferant[] getLieferantList() {
            return base.Channel.getLieferantList();
        }
        
        public System.Threading.Tasks.Task<DAL.Lieferant[]> getLieferantListAsync() {
            return base.Channel.getLieferantListAsync();
        }
        
        public DAL.Artikel getArtikelbyId(int id) {
            return base.Channel.getArtikelbyId(id);
        }
        
        public System.Threading.Tasks.Task<DAL.Artikel> getArtikelbyIdAsync(int id) {
            return base.Channel.getArtikelbyIdAsync(id);
        }
        
        public DAL.Artikel getArtikelByGTIN(string GTIN) {
            return base.Channel.getArtikelByGTIN(GTIN);
        }
        
        public System.Threading.Tasks.Task<DAL.Artikel> getArtikelByGTINAsync(string GTIN) {
            return base.Channel.getArtikelByGTINAsync(GTIN);
        }
        
        public void setArtikel(DAL.Artikel artikel) {
            base.Channel.setArtikel(artikel);
        }
        
        public System.Threading.Tasks.Task setArtikelAsync(DAL.Artikel artikel) {
            return base.Channel.setArtikelAsync(artikel);
        }
        
        public void updateArtikel(DAL.Artikel artikel) {
            base.Channel.updateArtikel(artikel);
        }
        
        public System.Threading.Tasks.Task updateArtikelAsync(DAL.Artikel artikel) {
            return base.Channel.updateArtikelAsync(artikel);
        }
        
        public DAL.Artikel[] getArtikelList() {
            return base.Channel.getArtikelList();
        }
        
        public System.Threading.Tasks.Task<DAL.Artikel[]> getArtikelListAsync() {
            return base.Channel.getArtikelListAsync();
        }
        
        public DAL.Artikel[] getArtikelbyLieferantId(int id) {
            return base.Channel.getArtikelbyLieferantId(id);
        }
        
        public System.Threading.Tasks.Task<DAL.Artikel[]> getArtikelbyLieferantIdAsync(int id) {
            return base.Channel.getArtikelbyLieferantIdAsync(id);
        }
        
        public DAL.Artikel[] getArtikelbyWarengruppeId(int id) {
            return base.Channel.getArtikelbyWarengruppeId(id);
        }
        
        public System.Threading.Tasks.Task<DAL.Artikel[]> getArtikelbyWarengruppeIdAsync(int id) {
            return base.Channel.getArtikelbyWarengruppeIdAsync(id);
        }
        
        public DAL.Beleg getBelegbyId(int id) {
            return base.Channel.getBelegbyId(id);
        }
        
        public System.Threading.Tasks.Task<DAL.Beleg> getBelegbyIdAsync(int id) {
            return base.Channel.getBelegbyIdAsync(id);
        }
        
        public void setBeleg(DAL.Beleg beleg) {
            base.Channel.setBeleg(beleg);
        }
        
        public System.Threading.Tasks.Task setBelegAsync(DAL.Beleg beleg) {
            return base.Channel.setBelegAsync(beleg);
        }
        
        public void updateBeleg(DAL.Beleg beleg) {
            base.Channel.updateBeleg(beleg);
        }
        
        public System.Threading.Tasks.Task updateBelegAsync(DAL.Beleg beleg) {
            return base.Channel.updateBelegAsync(beleg);
        }
        
        public DAL.Beleg[] getBelegList() {
            return base.Channel.getBelegList();
        }
        
        public System.Threading.Tasks.Task<DAL.Beleg[]> getBelegListAsync() {
            return base.Channel.getBelegListAsync();
        }
        
        public int getArtikelCountByArtikelIdAndLieferartIdAndBetween(int artikel_id, int lieferart_id, System.DateTime von, System.DateTime bis) {
            return base.Channel.getArtikelCountByArtikelIdAndLieferartIdAndBetween(artikel_id, lieferart_id, von, bis);
        }
        
        public System.Threading.Tasks.Task<int> getArtikelCountByArtikelIdAndLieferartIdAndBetweenAsync(int artikel_id, int lieferart_id, System.DateTime von, System.DateTime bis) {
            return base.Channel.getArtikelCountByArtikelIdAndLieferartIdAndBetweenAsync(artikel_id, lieferart_id, von, bis);
        }
        
        public void setArtikelBeleg(DAL.Artikel artikel, DAL.Beleg beleg) {
            base.Channel.setArtikelBeleg(artikel, beleg);
        }
        
        public System.Threading.Tasks.Task setArtikelBelegAsync(DAL.Artikel artikel, DAL.Beleg beleg) {
            return base.Channel.setArtikelBelegAsync(artikel, beleg);
        }
        
        public void updateArtikelBeleg(DAL.ArtikelBeleg artikelbeleg) {
            base.Channel.updateArtikelBeleg(artikelbeleg);
        }
        
        public System.Threading.Tasks.Task updateArtikelBelegAsync(DAL.ArtikelBeleg artikelbeleg) {
            return base.Channel.updateArtikelBelegAsync(artikelbeleg);
        }
        
        public DAL.Artikel[] getArtikelfromBelegId(int id) {
            return base.Channel.getArtikelfromBelegId(id);
        }
        
        public System.Threading.Tasks.Task<DAL.Artikel[]> getArtikelfromBelegIdAsync(int id) {
            return base.Channel.getArtikelfromBelegIdAsync(id);
        }
        
        public DAL.Beleg[] getBelegfromArtikelId(int id) {
            return base.Channel.getBelegfromArtikelId(id);
        }
        
        public System.Threading.Tasks.Task<DAL.Beleg[]> getBelegfromArtikelIdAsync(int id) {
            return base.Channel.getBelegfromArtikelIdAsync(id);
        }
        
        public DAL.Warengruppe getWarengruppebyId(int id) {
            return base.Channel.getWarengruppebyId(id);
        }
        
        public System.Threading.Tasks.Task<DAL.Warengruppe> getWarengruppebyIdAsync(int id) {
            return base.Channel.getWarengruppebyIdAsync(id);
        }
        
        public void setWarengruppe(DAL.Warengruppe gruppe) {
            base.Channel.setWarengruppe(gruppe);
        }
        
        public System.Threading.Tasks.Task setWarengruppeAsync(DAL.Warengruppe gruppe) {
            return base.Channel.setWarengruppeAsync(gruppe);
        }
        
        public void updateWarengruppe(DAL.Warengruppe warengruppe) {
            base.Channel.updateWarengruppe(warengruppe);
        }
        
        public System.Threading.Tasks.Task updateWarengruppeAsync(DAL.Warengruppe warengruppe) {
            return base.Channel.updateWarengruppeAsync(warengruppe);
        }
        
        public DAL.Warengruppe[] getWarengruppeList() {
            return base.Channel.getWarengruppeList();
        }
        
        public System.Threading.Tasks.Task<DAL.Warengruppe[]> getWarengruppeListAsync() {
            return base.Channel.getWarengruppeListAsync();
        }
        
        public DAL.Warengruppe getWarengruppebyName(string name) {
            return base.Channel.getWarengruppebyName(name);
        }
        
        public System.Threading.Tasks.Task<DAL.Warengruppe> getWarengruppebyNameAsync(string name) {
            return base.Channel.getWarengruppebyNameAsync(name);
        }
        
        public DAL.Prognose getPrognosebyId(int id) {
            return base.Channel.getPrognosebyId(id);
        }
        
        public System.Threading.Tasks.Task<DAL.Prognose> getPrognosebyIdAsync(int id) {
            return base.Channel.getPrognosebyIdAsync(id);
        }
        
        public void setPrognose(DAL.Prognose prognose) {
            base.Channel.setPrognose(prognose);
        }
        
        public System.Threading.Tasks.Task setPrognoseAsync(DAL.Prognose prognose) {
            return base.Channel.setPrognoseAsync(prognose);
        }
        
        public void updatePrognose(DAL.Prognose prognose) {
            base.Channel.updatePrognose(prognose);
        }
        
        public System.Threading.Tasks.Task updatePrognoseAsync(DAL.Prognose prognose) {
            return base.Channel.updatePrognoseAsync(prognose);
        }
        
        public DAL.Prognose[] getPrognoseList() {
            return base.Channel.getPrognoseList();
        }
        
        public System.Threading.Tasks.Task<DAL.Prognose[]> getPrognoseListAsync() {
            return base.Channel.getPrognoseListAsync();
        }
        
        public DAL.Prognose getPrognosebyArtikelId(int id) {
            return base.Channel.getPrognosebyArtikelId(id);
        }
        
        public System.Threading.Tasks.Task<DAL.Prognose> getPrognosebyArtikelIdAsync(int id) {
            return base.Channel.getPrognosebyArtikelIdAsync(id);
        }
        
        public DAL.Prognose[] getPrognosebyDate(System.DateTime date) {
            return base.Channel.getPrognosebyDate(date);
        }
        
        public System.Threading.Tasks.Task<DAL.Prognose[]> getPrognosebyDateAsync(System.DateTime date) {
            return base.Channel.getPrognosebyDateAsync(date);
        }
        
        public DAL.Lieferart getLieferartbyId(int id) {
            return base.Channel.getLieferartbyId(id);
        }
        
        public System.Threading.Tasks.Task<DAL.Lieferart> getLieferartbyIdAsync(int id) {
            return base.Channel.getLieferartbyIdAsync(id);
        }
        
        public DAL.Lieferart getLieferartByName(string name) {
            return base.Channel.getLieferartByName(name);
        }
        
        public System.Threading.Tasks.Task<DAL.Lieferart> getLieferartByNameAsync(string name) {
            return base.Channel.getLieferartByNameAsync(name);
        }
        
        public void setLieferart(DAL.Lieferart lieferart) {
            base.Channel.setLieferart(lieferart);
        }
        
        public System.Threading.Tasks.Task setLieferartAsync(DAL.Lieferart lieferart) {
            return base.Channel.setLieferartAsync(lieferart);
        }
        
        public void updateLieferart(DAL.Lieferart lieferart) {
            base.Channel.updateLieferart(lieferart);
        }
        
        public System.Threading.Tasks.Task updateLieferartAsync(DAL.Lieferart lieferart) {
            return base.Channel.updateLieferartAsync(lieferart);
        }
        
        public DAL.Lieferart[] getLieferartList() {
            return base.Channel.getLieferartList();
        }
        
        public System.Threading.Tasks.Task<DAL.Lieferart[]> getLieferartListAsync() {
            return base.Channel.getLieferartListAsync();
        }
    }
}
