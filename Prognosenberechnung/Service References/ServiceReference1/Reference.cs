//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Prognosenberechnung.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Personal", Namespace="http://schemas.datacontract.org/2004/07/DAL")]
    [System.SerializableAttribute()]
    public partial class Personal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Prognosenberechnung.ServiceReference1.Arbeitsvertrag ArbeitsvertragField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArbeitsvertragIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BICField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HausnummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IBANField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostleitzahlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Prognosenberechnung.ServiceReference1.Rolle RolleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RolleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Prognosenberechnung.ServiceReference1.Schicht[] SchichtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SteuerklasseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StraßeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VornameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZusatzField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Prognosenberechnung.ServiceReference1.Arbeitsvertrag Arbeitsvertrag {
            get {
                return this.ArbeitsvertragField;
            }
            set {
                if ((object.ReferenceEquals(this.ArbeitsvertragField, value) != true)) {
                    this.ArbeitsvertragField = value;
                    this.RaisePropertyChanged("Arbeitsvertrag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArbeitsvertragId {
            get {
                return this.ArbeitsvertragIdField;
            }
            set {
                if ((this.ArbeitsvertragIdField.Equals(value) != true)) {
                    this.ArbeitsvertragIdField = value;
                    this.RaisePropertyChanged("ArbeitsvertragId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BIC {
            get {
                return this.BICField;
            }
            set {
                if ((object.ReferenceEquals(this.BICField, value) != true)) {
                    this.BICField = value;
                    this.RaisePropertyChanged("BIC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Hausnummer {
            get {
                return this.HausnummerField;
            }
            set {
                if ((this.HausnummerField.Equals(value) != true)) {
                    this.HausnummerField = value;
                    this.RaisePropertyChanged("Hausnummer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IBAN {
            get {
                return this.IBANField;
            }
            set {
                if ((object.ReferenceEquals(this.IBANField, value) != true)) {
                    this.IBANField = value;
                    this.RaisePropertyChanged("IBAN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobil {
            get {
                return this.MobilField;
            }
            set {
                if ((object.ReferenceEquals(this.MobilField, value) != true)) {
                    this.MobilField = value;
                    this.RaisePropertyChanged("Mobil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ort {
            get {
                return this.OrtField;
            }
            set {
                if ((object.ReferenceEquals(this.OrtField, value) != true)) {
                    this.OrtField = value;
                    this.RaisePropertyChanged("Ort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Postleitzahl {
            get {
                return this.PostleitzahlField;
            }
            set {
                if ((this.PostleitzahlField.Equals(value) != true)) {
                    this.PostleitzahlField = value;
                    this.RaisePropertyChanged("Postleitzahl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Prognosenberechnung.ServiceReference1.Rolle Rolle {
            get {
                return this.RolleField;
            }
            set {
                if ((object.ReferenceEquals(this.RolleField, value) != true)) {
                    this.RolleField = value;
                    this.RaisePropertyChanged("Rolle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RolleId {
            get {
                return this.RolleIdField;
            }
            set {
                if ((this.RolleIdField.Equals(value) != true)) {
                    this.RolleIdField = value;
                    this.RaisePropertyChanged("RolleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Prognosenberechnung.ServiceReference1.Schicht[] Schicht {
            get {
                return this.SchichtField;
            }
            set {
                if ((object.ReferenceEquals(this.SchichtField, value) != true)) {
                    this.SchichtField = value;
                    this.RaisePropertyChanged("Schicht");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Steuerklasse {
            get {
                return this.SteuerklasseField;
            }
            set {
                if ((this.SteuerklasseField.Equals(value) != true)) {
                    this.SteuerklasseField = value;
                    this.RaisePropertyChanged("Steuerklasse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Straße {
            get {
                return this.StraßeField;
            }
            set {
                if ((object.ReferenceEquals(this.StraßeField, value) != true)) {
                    this.StraßeField = value;
                    this.RaisePropertyChanged("Straße");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefon {
            get {
                return this.TelefonField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefonField, value) != true)) {
                    this.TelefonField = value;
                    this.RaisePropertyChanged("Telefon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vorname {
            get {
                return this.VornameField;
            }
            set {
                if ((object.ReferenceEquals(this.VornameField, value) != true)) {
                    this.VornameField = value;
                    this.RaisePropertyChanged("Vorname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zusatz {
            get {
                return this.ZusatzField;
            }
            set {
                if ((object.ReferenceEquals(this.ZusatzField, value) != true)) {
                    this.ZusatzField = value;
                    this.RaisePropertyChanged("Zusatz");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Arbeitsvertrag", Namespace="http://schemas.datacontract.org/2004/07/DAL")]
    [System.SerializableAttribute()]
    public partial class Arbeitsvertrag : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Prognosenberechnung.ServiceReference1.Personal[] PersonalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StundenlohnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WochenstundenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Prognosenberechnung.ServiceReference1.Personal[] Personal {
            get {
                return this.PersonalField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonalField, value) != true)) {
                    this.PersonalField = value;
                    this.RaisePropertyChanged("Personal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Stundenlohn {
            get {
                return this.StundenlohnField;
            }
            set {
                if ((this.StundenlohnField.Equals(value) != true)) {
                    this.StundenlohnField = value;
                    this.RaisePropertyChanged("Stundenlohn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Wochenstunden {
            get {
                return this.WochenstundenField;
            }
            set {
                if ((this.WochenstundenField.Equals(value) != true)) {
                    this.WochenstundenField = value;
                    this.RaisePropertyChanged("Wochenstunden");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rolle", Namespace="http://schemas.datacontract.org/2004/07/DAL")]
    [System.SerializableAttribute()]
    public partial class Rolle : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Prognosenberechnung.ServiceReference1.Personal[] PersonalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Prognosenberechnung.ServiceReference1.RolleRecht[] RolleRechtField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Prognosenberechnung.ServiceReference1.Personal[] Personal {
            get {
                return this.PersonalField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonalField, value) != true)) {
                    this.PersonalField = value;
                    this.RaisePropertyChanged("Personal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Prognosenberechnung.ServiceReference1.RolleRecht[] RolleRecht {
            get {
                return this.RolleRechtField;
            }
            set {
                if ((object.ReferenceEquals(this.RolleRechtField, value) != true)) {
                    this.RolleRechtField = value;
                    this.RaisePropertyChanged("RolleRecht");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Schicht", Namespace="http://schemas.datacontract.org/2004/07/DAL")]
    [System.SerializableAttribute()]
    public partial class Schicht : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Endzeit_istField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Endzeit_sollField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Prognosenberechnung.ServiceReference1.Personal PersonalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Startzeit_istField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Startzeit_sollField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Endzeit_ist {
            get {
                return this.Endzeit_istField;
            }
            set {
                if ((this.Endzeit_istField.Equals(value) != true)) {
                    this.Endzeit_istField = value;
                    this.RaisePropertyChanged("Endzeit_ist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Endzeit_soll {
            get {
                return this.Endzeit_sollField;
            }
            set {
                if ((this.Endzeit_sollField.Equals(value) != true)) {
                    this.Endzeit_sollField = value;
                    this.RaisePropertyChanged("Endzeit_soll");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Pause {
            get {
                return this.PauseField;
            }
            set {
                if ((this.PauseField.Equals(value) != true)) {
                    this.PauseField = value;
                    this.RaisePropertyChanged("Pause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Prognosenberechnung.ServiceReference1.Personal Personal {
            get {
                return this.PersonalField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonalField, value) != true)) {
                    this.PersonalField = value;
                    this.RaisePropertyChanged("Personal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonalId {
            get {
                return this.PersonalIdField;
            }
            set {
                if ((this.PersonalIdField.Equals(value) != true)) {
                    this.PersonalIdField = value;
                    this.RaisePropertyChanged("PersonalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Startzeit_ist {
            get {
                return this.Startzeit_istField;
            }
            set {
                if ((this.Startzeit_istField.Equals(value) != true)) {
                    this.Startzeit_istField = value;
                    this.RaisePropertyChanged("Startzeit_ist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Startzeit_soll {
            get {
                return this.Startzeit_sollField;
            }
            set {
                if ((this.Startzeit_sollField.Equals(value) != true)) {
                    this.Startzeit_sollField = value;
                    this.RaisePropertyChanged("Startzeit_soll");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RolleRecht", Namespace="http://schemas.datacontract.org/2004/07/DAL")]
    [System.SerializableAttribute()]
    public partial class RolleRecht : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Prognosenberechnung.ServiceReference1.Recht RechtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RechtIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Prognosenberechnung.ServiceReference1.Rolle RolleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RolleIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Prognosenberechnung.ServiceReference1.Recht Recht {
            get {
                return this.RechtField;
            }
            set {
                if ((object.ReferenceEquals(this.RechtField, value) != true)) {
                    this.RechtField = value;
                    this.RaisePropertyChanged("Recht");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RechtId {
            get {
                return this.RechtIdField;
            }
            set {
                if ((this.RechtIdField.Equals(value) != true)) {
                    this.RechtIdField = value;
                    this.RaisePropertyChanged("RechtId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Prognosenberechnung.ServiceReference1.Rolle Rolle {
            get {
                return this.RolleField;
            }
            set {
                if ((object.ReferenceEquals(this.RolleField, value) != true)) {
                    this.RolleField = value;
                    this.RaisePropertyChanged("Rolle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RolleId {
            get {
                return this.RolleIdField;
            }
            set {
                if ((this.RolleIdField.Equals(value) != true)) {
                    this.RolleIdField = value;
                    this.RaisePropertyChanged("RolleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Recht", Namespace="http://schemas.datacontract.org/2004/07/DAL")]
    [System.SerializableAttribute()]
    public partial class Recht : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Prognosenberechnung.ServiceReference1.RolleRecht[] RolleRechtField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Prognosenberechnung.ServiceReference1.RolleRecht[] RolleRecht {
            get {
                return this.RolleRechtField;
            }
            set {
                if ((object.ReferenceEquals(this.RolleRechtField, value) != true)) {
                    this.RolleRechtField = value;
                    this.RaisePropertyChanged("RolleRecht");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lieferant", Namespace="http://schemas.datacontract.org/2004/07/DAL")]
    [System.SerializableAttribute()]
    public partial class Lieferant : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Prognosenberechnung.ServiceReference1.Artikel[] ArtikelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BICField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HausnummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IBANField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostleitzahlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StraßeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZusatzField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Prognosenberechnung.ServiceReference1.Artikel[] Artikel {
            get {
                return this.ArtikelField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtikelField, value) != true)) {
                    this.ArtikelField = value;
                    this.RaisePropertyChanged("Artikel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BIC {
            get {
                return this.BICField;
            }
            set {
                if ((object.ReferenceEquals(this.BICField, value) != true)) {
                    this.BICField = value;
                    this.RaisePropertyChanged("BIC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Hausnummer {
            get {
                return this.HausnummerField;
            }
            set {
                if ((this.HausnummerField.Equals(value) != true)) {
                    this.HausnummerField = value;
                    this.RaisePropertyChanged("Hausnummer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IBAN {
            get {
                return this.IBANField;
            }
            set {
                if ((object.ReferenceEquals(this.IBANField, value) != true)) {
                    this.IBANField = value;
                    this.RaisePropertyChanged("IBAN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobil {
            get {
                return this.MobilField;
            }
            set {
                if ((object.ReferenceEquals(this.MobilField, value) != true)) {
                    this.MobilField = value;
                    this.RaisePropertyChanged("Mobil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ort {
            get {
                return this.OrtField;
            }
            set {
                if ((object.ReferenceEquals(this.OrtField, value) != true)) {
                    this.OrtField = value;
                    this.RaisePropertyChanged("Ort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Postleitzahl {
            get {
                return this.PostleitzahlField;
            }
            set {
                if ((this.PostleitzahlField.Equals(value) != true)) {
                    this.PostleitzahlField = value;
                    this.RaisePropertyChanged("Postleitzahl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Straße {
            get {
                return this.StraßeField;
            }
            set {
                if ((object.ReferenceEquals(this.StraßeField, value) != true)) {
                    this.StraßeField = value;
                    this.RaisePropertyChanged("Straße");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefon {
            get {
                return this.TelefonField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefonField, value) != true)) {
                    this.TelefonField = value;
                    this.RaisePropertyChanged("Telefon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zusatz {
            get {
                return this.ZusatzField;
            }
            set {
                if ((object.ReferenceEquals(this.ZusatzField, value) != true)) {
                    this.ZusatzField = value;
                    this.RaisePropertyChanged("Zusatz");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Artikel", Namespace="http://schemas.datacontract.org/2004/07/DAL")]
    [System.SerializableAttribute()]
    public partial class Artikel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Prognosenberechnung.ServiceReference1.ArtikelBeleg[] ArtikelBelegField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BestandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Prognosenberechnung.ServiceReference1.Einheit EinheitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GTINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Prognosenberechnung.ServiceReference1.Lieferant LieferantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LieferantIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double NettoeinkaufspreisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double NettoverkaufspreisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Prognosenberechnung.ServiceReference1.Prognose[] PrognoseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Prognosenberechnung.ServiceReference1.Warengruppe WarengruppeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WarengruppeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Prognosenberechnung.ServiceReference1.ArtikelBeleg[] ArtikelBeleg {
            get {
                return this.ArtikelBelegField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtikelBelegField, value) != true)) {
                    this.ArtikelBelegField = value;
                    this.RaisePropertyChanged("ArtikelBeleg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Bestand {
            get {
                return this.BestandField;
            }
            set {
                if ((this.BestandField.Equals(value) != true)) {
                    this.BestandField = value;
                    this.RaisePropertyChanged("Bestand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Prognosenberechnung.ServiceReference1.Einheit Einheit {
            get {
                return this.EinheitField;
            }
            set {
                if ((this.EinheitField.Equals(value) != true)) {
                    this.EinheitField = value;
                    this.RaisePropertyChanged("Einheit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GTIN {
            get {
                return this.GTINField;
            }
            set {
                if ((this.GTINField.Equals(value) != true)) {
                    this.GTINField = value;
                    this.RaisePropertyChanged("GTIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Prognosenberechnung.ServiceReference1.Lieferant Lieferant {
            get {
                return this.LieferantField;
            }
            set {
                if ((object.ReferenceEquals(this.LieferantField, value) != true)) {
                    this.LieferantField = value;
                    this.RaisePropertyChanged("Lieferant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LieferantId {
            get {
                return this.LieferantIdField;
            }
            set {
                if ((this.LieferantIdField.Equals(value) != true)) {
                    this.LieferantIdField = value;
                    this.RaisePropertyChanged("LieferantId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Nettoeinkaufspreis {
            get {
                return this.NettoeinkaufspreisField;
            }
            set {
                if ((this.NettoeinkaufspreisField.Equals(value) != true)) {
                    this.NettoeinkaufspreisField = value;
                    this.RaisePropertyChanged("Nettoeinkaufspreis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Nettoverkaufspreis {
            get {
                return this.NettoverkaufspreisField;
            }
            set {
                if ((this.NettoverkaufspreisField.Equals(value) != true)) {
                    this.NettoverkaufspreisField = value;
                    this.RaisePropertyChanged("Nettoverkaufspreis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Prognosenberechnung.ServiceReference1.Prognose[] Prognose {
            get {
                return this.PrognoseField;
            }
            set {
                if ((object.ReferenceEquals(this.PrognoseField, value) != true)) {
                    this.PrognoseField = value;
                    this.RaisePropertyChanged("Prognose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Prognosenberechnung.ServiceReference1.Warengruppe Warengruppe {
            get {
                return this.WarengruppeField;
            }
            set {
                if ((object.ReferenceEquals(this.WarengruppeField, value) != true)) {
                    this.WarengruppeField = value;
                    this.RaisePropertyChanged("Warengruppe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WarengruppeId {
            get {
                return this.WarengruppeIdField;
            }
            set {
                if ((this.WarengruppeIdField.Equals(value) != true)) {
                    this.WarengruppeIdField = value;
                    this.RaisePropertyChanged("WarengruppeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Warengruppe", Namespace="http://schemas.datacontract.org/2004/07/DAL")]
    [System.SerializableAttribute()]
    public partial class Warengruppe : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Prognosenberechnung.ServiceReference1.Artikel[] ArtikelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SteuersatzField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Prognosenberechnung.ServiceReference1.Artikel[] Artikel {
            get {
                return this.ArtikelField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtikelField, value) != true)) {
                    this.ArtikelField = value;
                    this.RaisePropertyChanged("Artikel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Steuersatz {
            get {
                return this.SteuersatzField;
            }
            set {
                if ((this.SteuersatzField.Equals(value) != true)) {
                    this.SteuersatzField = value;
                    this.RaisePropertyChanged("Steuersatz");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArtikelBeleg", Namespace="http://schemas.datacontract.org/2004/07/DAL")]
    [System.SerializableAttribute()]
    public partial class ArtikelBeleg : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Prognosenberechnung.ServiceReference1.Artikel ArtikelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArtikelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Prognosenberechnung.ServiceReference1.Beleg BelegField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BelegIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Prognosenberechnung.ServiceReference1.Artikel Artikel {
            get {
                return this.ArtikelField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtikelField, value) != true)) {
                    this.ArtikelField = value;
                    this.RaisePropertyChanged("Artikel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArtikelId {
            get {
                return this.ArtikelIdField;
            }
            set {
                if ((this.ArtikelIdField.Equals(value) != true)) {
                    this.ArtikelIdField = value;
                    this.RaisePropertyChanged("ArtikelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Prognosenberechnung.ServiceReference1.Beleg Beleg {
            get {
                return this.BelegField;
            }
            set {
                if ((object.ReferenceEquals(this.BelegField, value) != true)) {
                    this.BelegField = value;
                    this.RaisePropertyChanged("Beleg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BelegId {
            get {
                return this.BelegIdField;
            }
            set {
                if ((this.BelegIdField.Equals(value) != true)) {
                    this.BelegIdField = value;
                    this.RaisePropertyChanged("BelegId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Einheit", Namespace="http://schemas.datacontract.org/2004/07/DAL")]
    public enum Einheit : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gramm = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kilogramm = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stück = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Prognose", Namespace="http://schemas.datacontract.org/2004/07/DAL")]
    [System.SerializableAttribute()]
    public partial class Prognose : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Abverkauf_istField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Abverkauf_sollField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Prognosenberechnung.ServiceReference1.Artikel ArtikelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArtikelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DatumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Abverkauf_ist {
            get {
                return this.Abverkauf_istField;
            }
            set {
                if ((this.Abverkauf_istField.Equals(value) != true)) {
                    this.Abverkauf_istField = value;
                    this.RaisePropertyChanged("Abverkauf_ist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Abverkauf_soll {
            get {
                return this.Abverkauf_sollField;
            }
            set {
                if ((this.Abverkauf_sollField.Equals(value) != true)) {
                    this.Abverkauf_sollField = value;
                    this.RaisePropertyChanged("Abverkauf_soll");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Prognosenberechnung.ServiceReference1.Artikel Artikel {
            get {
                return this.ArtikelField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtikelField, value) != true)) {
                    this.ArtikelField = value;
                    this.RaisePropertyChanged("Artikel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArtikelId {
            get {
                return this.ArtikelIdField;
            }
            set {
                if ((this.ArtikelIdField.Equals(value) != true)) {
                    this.ArtikelIdField = value;
                    this.RaisePropertyChanged("ArtikelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Datum {
            get {
                return this.DatumField;
            }
            set {
                if ((this.DatumField.Equals(value) != true)) {
                    this.DatumField = value;
                    this.RaisePropertyChanged("Datum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Beleg", Namespace="http://schemas.datacontract.org/2004/07/DAL")]
    [System.SerializableAttribute()]
    public partial class Beleg : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Prognosenberechnung.ServiceReference1.ArtikelBeleg[] ArtikelBelegField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Prognosenberechnung.ServiceReference1.Lieferart LieferartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LieferartIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Prognosenberechnung.ServiceReference1.ArtikelBeleg[] ArtikelBeleg {
            get {
                return this.ArtikelBelegField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtikelBelegField, value) != true)) {
                    this.ArtikelBelegField = value;
                    this.RaisePropertyChanged("ArtikelBeleg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Prognosenberechnung.ServiceReference1.Lieferart Lieferart {
            get {
                return this.LieferartField;
            }
            set {
                if ((object.ReferenceEquals(this.LieferartField, value) != true)) {
                    this.LieferartField = value;
                    this.RaisePropertyChanged("Lieferart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LieferartId {
            get {
                return this.LieferartIdField;
            }
            set {
                if ((this.LieferartIdField.Equals(value) != true)) {
                    this.LieferartIdField = value;
                    this.RaisePropertyChanged("LieferartId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lieferart", Namespace="http://schemas.datacontract.org/2004/07/DAL")]
    [System.SerializableAttribute()]
    public partial class Lieferart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Prognosenberechnung.ServiceReference1.Beleg[] BelegField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Prognosenberechnung.ServiceReference1.Beleg[] Beleg {
            get {
                return this.BelegField;
            }
            set {
                if ((object.ReferenceEquals(this.BelegField, value) != true)) {
                    this.BelegField = value;
                    this.RaisePropertyChanged("Beleg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPersonalbyId", ReplyAction="http://tempuri.org/IService1/getPersonalbyIdResponse")]
        Prognosenberechnung.ServiceReference1.Personal getPersonalbyId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPersonalbyId", ReplyAction="http://tempuri.org/IService1/getPersonalbyIdResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Personal> getPersonalbyIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setPersonal", ReplyAction="http://tempuri.org/IService1/setPersonalResponse")]
        void setPersonal(Prognosenberechnung.ServiceReference1.Personal person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setPersonal", ReplyAction="http://tempuri.org/IService1/setPersonalResponse")]
        System.Threading.Tasks.Task setPersonalAsync(Prognosenberechnung.ServiceReference1.Personal person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updatePersonal", ReplyAction="http://tempuri.org/IService1/updatePersonalResponse")]
        void updatePersonal(Prognosenberechnung.ServiceReference1.Personal personal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updatePersonal", ReplyAction="http://tempuri.org/IService1/updatePersonalResponse")]
        System.Threading.Tasks.Task updatePersonalAsync(Prognosenberechnung.ServiceReference1.Personal personal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPersonalList", ReplyAction="http://tempuri.org/IService1/getPersonalListResponse")]
        Prognosenberechnung.ServiceReference1.Personal[] getPersonalList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPersonalList", ReplyAction="http://tempuri.org/IService1/getPersonalListResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Personal[]> getPersonalListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPersonalbyRolleId", ReplyAction="http://tempuri.org/IService1/getPersonalbyRolleIdResponse")]
        Prognosenberechnung.ServiceReference1.Personal[] getPersonalbyRolleId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPersonalbyRolleId", ReplyAction="http://tempuri.org/IService1/getPersonalbyRolleIdResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Personal[]> getPersonalbyRolleIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArbeitsvertragbyId", ReplyAction="http://tempuri.org/IService1/getArbeitsvertragbyIdResponse")]
        Prognosenberechnung.ServiceReference1.Arbeitsvertrag getArbeitsvertragbyId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArbeitsvertragbyId", ReplyAction="http://tempuri.org/IService1/getArbeitsvertragbyIdResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Arbeitsvertrag> getArbeitsvertragbyIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setArbeitsvertrag", ReplyAction="http://tempuri.org/IService1/setArbeitsvertragResponse")]
        void setArbeitsvertrag(Prognosenberechnung.ServiceReference1.Arbeitsvertrag vertrag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setArbeitsvertrag", ReplyAction="http://tempuri.org/IService1/setArbeitsvertragResponse")]
        System.Threading.Tasks.Task setArbeitsvertragAsync(Prognosenberechnung.ServiceReference1.Arbeitsvertrag vertrag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateArbeitsvertrag", ReplyAction="http://tempuri.org/IService1/updateArbeitsvertragResponse")]
        void updateArbeitsvertrag(Prognosenberechnung.ServiceReference1.Arbeitsvertrag arbeitsvertrag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateArbeitsvertrag", ReplyAction="http://tempuri.org/IService1/updateArbeitsvertragResponse")]
        System.Threading.Tasks.Task updateArbeitsvertragAsync(Prognosenberechnung.ServiceReference1.Arbeitsvertrag arbeitsvertrag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArbeitsvertragList", ReplyAction="http://tempuri.org/IService1/getArbeitsvertragListResponse")]
        Prognosenberechnung.ServiceReference1.Arbeitsvertrag[] getArbeitsvertragList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArbeitsvertragList", ReplyAction="http://tempuri.org/IService1/getArbeitsvertragListResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Arbeitsvertrag[]> getArbeitsvertragListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRollebyId", ReplyAction="http://tempuri.org/IService1/getRollebyIdResponse")]
        Prognosenberechnung.ServiceReference1.Rolle getRollebyId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRollebyId", ReplyAction="http://tempuri.org/IService1/getRollebyIdResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Rolle> getRollebyIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setRolle", ReplyAction="http://tempuri.org/IService1/setRolleResponse")]
        void setRolle(Prognosenberechnung.ServiceReference1.Rolle role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setRolle", ReplyAction="http://tempuri.org/IService1/setRolleResponse")]
        System.Threading.Tasks.Task setRolleAsync(Prognosenberechnung.ServiceReference1.Rolle role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateRolle", ReplyAction="http://tempuri.org/IService1/updateRolleResponse")]
        void updateRolle(Prognosenberechnung.ServiceReference1.Rolle rolle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateRolle", ReplyAction="http://tempuri.org/IService1/updateRolleResponse")]
        System.Threading.Tasks.Task updateRolleAsync(Prognosenberechnung.ServiceReference1.Rolle rolle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRolleList", ReplyAction="http://tempuri.org/IService1/getRolleListResponse")]
        Prognosenberechnung.ServiceReference1.Rolle[] getRolleList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRolleList", ReplyAction="http://tempuri.org/IService1/getRolleListResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Rolle[]> getRolleListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRechtbyId", ReplyAction="http://tempuri.org/IService1/getRechtbyIdResponse")]
        Prognosenberechnung.ServiceReference1.Recht getRechtbyId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRechtbyId", ReplyAction="http://tempuri.org/IService1/getRechtbyIdResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Recht> getRechtbyIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setRecht", ReplyAction="http://tempuri.org/IService1/setRechtResponse")]
        void setRecht(Prognosenberechnung.ServiceReference1.Recht recht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setRecht", ReplyAction="http://tempuri.org/IService1/setRechtResponse")]
        System.Threading.Tasks.Task setRechtAsync(Prognosenberechnung.ServiceReference1.Recht recht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateRecht", ReplyAction="http://tempuri.org/IService1/updateRechtResponse")]
        void updateRecht(Prognosenberechnung.ServiceReference1.Recht recht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateRecht", ReplyAction="http://tempuri.org/IService1/updateRechtResponse")]
        System.Threading.Tasks.Task updateRechtAsync(Prognosenberechnung.ServiceReference1.Recht recht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setRolleRecht", ReplyAction="http://tempuri.org/IService1/setRolleRechtResponse")]
        void setRolleRecht(Prognosenberechnung.ServiceReference1.Rolle rolle, Prognosenberechnung.ServiceReference1.Recht recht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setRolleRecht", ReplyAction="http://tempuri.org/IService1/setRolleRechtResponse")]
        System.Threading.Tasks.Task setRolleRechtAsync(Prognosenberechnung.ServiceReference1.Rolle rolle, Prognosenberechnung.ServiceReference1.Recht recht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateRolleRecht", ReplyAction="http://tempuri.org/IService1/updateRolleRechtResponse")]
        void updateRolleRecht(Prognosenberechnung.ServiceReference1.RolleRecht rollerecht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateRolleRecht", ReplyAction="http://tempuri.org/IService1/updateRolleRechtResponse")]
        System.Threading.Tasks.Task updateRolleRechtAsync(Prognosenberechnung.ServiceReference1.RolleRecht rollerecht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRollefromRechtId", ReplyAction="http://tempuri.org/IService1/getRollefromRechtIdResponse")]
        Prognosenberechnung.ServiceReference1.Rolle[] getRollefromRechtId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRollefromRechtId", ReplyAction="http://tempuri.org/IService1/getRollefromRechtIdResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Rolle[]> getRollefromRechtIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRechtfromRolleId", ReplyAction="http://tempuri.org/IService1/getRechtfromRolleIdResponse")]
        Prognosenberechnung.ServiceReference1.Recht[] getRechtfromRolleId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRechtfromRolleId", ReplyAction="http://tempuri.org/IService1/getRechtfromRolleIdResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Recht[]> getRechtfromRolleIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSchichtbyId", ReplyAction="http://tempuri.org/IService1/getSchichtbyIdResponse")]
        Prognosenberechnung.ServiceReference1.Schicht getSchichtbyId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSchichtbyId", ReplyAction="http://tempuri.org/IService1/getSchichtbyIdResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Schicht> getSchichtbyIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setSchicht", ReplyAction="http://tempuri.org/IService1/setSchichtResponse")]
        void setSchicht(Prognosenberechnung.ServiceReference1.Schicht schicht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setSchicht", ReplyAction="http://tempuri.org/IService1/setSchichtResponse")]
        System.Threading.Tasks.Task setSchichtAsync(Prognosenberechnung.ServiceReference1.Schicht schicht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateSchicht", ReplyAction="http://tempuri.org/IService1/updateSchichtResponse")]
        void updateSchicht(Prognosenberechnung.ServiceReference1.Schicht schicht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateSchicht", ReplyAction="http://tempuri.org/IService1/updateSchichtResponse")]
        System.Threading.Tasks.Task updateSchichtAsync(Prognosenberechnung.ServiceReference1.Schicht schicht);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSchichtbyPersonalId", ReplyAction="http://tempuri.org/IService1/getSchichtbyPersonalIdResponse")]
        Prognosenberechnung.ServiceReference1.Schicht[] getSchichtbyPersonalId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSchichtbyPersonalId", ReplyAction="http://tempuri.org/IService1/getSchichtbyPersonalIdResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Schicht[]> getSchichtbyPersonalIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSchichtBetween", ReplyAction="http://tempuri.org/IService1/getSchichtBetweenResponse")]
        Prognosenberechnung.ServiceReference1.Schicht[] getSchichtBetween(System.DateTime von, System.DateTime bis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSchichtBetween", ReplyAction="http://tempuri.org/IService1/getSchichtBetweenResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Schicht[]> getSchichtBetweenAsync(System.DateTime von, System.DateTime bis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSchichtByPersonalIdAndBetween", ReplyAction="http://tempuri.org/IService1/getSchichtByPersonalIdAndBetweenResponse")]
        Prognosenberechnung.ServiceReference1.Schicht[] getSchichtByPersonalIdAndBetween(int id, System.DateTime von, System.DateTime bis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSchichtByPersonalIdAndBetween", ReplyAction="http://tempuri.org/IService1/getSchichtByPersonalIdAndBetweenResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Schicht[]> getSchichtByPersonalIdAndBetweenAsync(int id, System.DateTime von, System.DateTime bis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLieferantbyId", ReplyAction="http://tempuri.org/IService1/getLieferantbyIdResponse")]
        Prognosenberechnung.ServiceReference1.Lieferant getLieferantbyId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLieferantbyId", ReplyAction="http://tempuri.org/IService1/getLieferantbyIdResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Lieferant> getLieferantbyIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setLieferant", ReplyAction="http://tempuri.org/IService1/setLieferantResponse")]
        void setLieferant(Prognosenberechnung.ServiceReference1.Lieferant lieferant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setLieferant", ReplyAction="http://tempuri.org/IService1/setLieferantResponse")]
        System.Threading.Tasks.Task setLieferantAsync(Prognosenberechnung.ServiceReference1.Lieferant lieferant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateLieferant", ReplyAction="http://tempuri.org/IService1/updateLieferantResponse")]
        void updateLieferant(Prognosenberechnung.ServiceReference1.Lieferant lieferant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateLieferant", ReplyAction="http://tempuri.org/IService1/updateLieferantResponse")]
        System.Threading.Tasks.Task updateLieferantAsync(Prognosenberechnung.ServiceReference1.Lieferant lieferant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLieferantList", ReplyAction="http://tempuri.org/IService1/getLieferantListResponse")]
        Prognosenberechnung.ServiceReference1.Lieferant[] getLieferantList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLieferantList", ReplyAction="http://tempuri.org/IService1/getLieferantListResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Lieferant[]> getLieferantListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelbyId", ReplyAction="http://tempuri.org/IService1/getArtikelbyIdResponse")]
        Prognosenberechnung.ServiceReference1.Artikel getArtikelbyId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelbyId", ReplyAction="http://tempuri.org/IService1/getArtikelbyIdResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Artikel> getArtikelbyIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setArtikel", ReplyAction="http://tempuri.org/IService1/setArtikelResponse")]
        void setArtikel(Prognosenberechnung.ServiceReference1.Artikel artikel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setArtikel", ReplyAction="http://tempuri.org/IService1/setArtikelResponse")]
        System.Threading.Tasks.Task setArtikelAsync(Prognosenberechnung.ServiceReference1.Artikel artikel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateArtikel", ReplyAction="http://tempuri.org/IService1/updateArtikelResponse")]
        void updateArtikel(Prognosenberechnung.ServiceReference1.Artikel artikel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateArtikel", ReplyAction="http://tempuri.org/IService1/updateArtikelResponse")]
        System.Threading.Tasks.Task updateArtikelAsync(Prognosenberechnung.ServiceReference1.Artikel artikel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelList", ReplyAction="http://tempuri.org/IService1/getArtikelListResponse")]
        Prognosenberechnung.ServiceReference1.Artikel[] getArtikelList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelList", ReplyAction="http://tempuri.org/IService1/getArtikelListResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Artikel[]> getArtikelListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelbyLieferantId", ReplyAction="http://tempuri.org/IService1/getArtikelbyLieferantIdResponse")]
        Prognosenberechnung.ServiceReference1.Artikel[] getArtikelbyLieferantId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelbyLieferantId", ReplyAction="http://tempuri.org/IService1/getArtikelbyLieferantIdResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Artikel[]> getArtikelbyLieferantIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelbyWarengruppeId", ReplyAction="http://tempuri.org/IService1/getArtikelbyWarengruppeIdResponse")]
        Prognosenberechnung.ServiceReference1.Artikel[] getArtikelbyWarengruppeId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelbyWarengruppeId", ReplyAction="http://tempuri.org/IService1/getArtikelbyWarengruppeIdResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Artikel[]> getArtikelbyWarengruppeIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getBelegbyId", ReplyAction="http://tempuri.org/IService1/getBelegbyIdResponse")]
        Prognosenberechnung.ServiceReference1.Beleg getBelegbyId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getBelegbyId", ReplyAction="http://tempuri.org/IService1/getBelegbyIdResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Beleg> getBelegbyIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setBeleg", ReplyAction="http://tempuri.org/IService1/setBelegResponse")]
        void setBeleg(Prognosenberechnung.ServiceReference1.Beleg beleg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setBeleg", ReplyAction="http://tempuri.org/IService1/setBelegResponse")]
        System.Threading.Tasks.Task setBelegAsync(Prognosenberechnung.ServiceReference1.Beleg beleg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateBeleg", ReplyAction="http://tempuri.org/IService1/updateBelegResponse")]
        void updateBeleg(Prognosenberechnung.ServiceReference1.Beleg beleg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateBeleg", ReplyAction="http://tempuri.org/IService1/updateBelegResponse")]
        System.Threading.Tasks.Task updateBelegAsync(Prognosenberechnung.ServiceReference1.Beleg beleg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getBelegList", ReplyAction="http://tempuri.org/IService1/getBelegListResponse")]
        Prognosenberechnung.ServiceReference1.Beleg[] getBelegList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getBelegList", ReplyAction="http://tempuri.org/IService1/getBelegListResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Beleg[]> getBelegListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setArtikelBeleg", ReplyAction="http://tempuri.org/IService1/setArtikelBelegResponse")]
        void setArtikelBeleg(Prognosenberechnung.ServiceReference1.Artikel artikel, Prognosenberechnung.ServiceReference1.Beleg beleg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setArtikelBeleg", ReplyAction="http://tempuri.org/IService1/setArtikelBelegResponse")]
        System.Threading.Tasks.Task setArtikelBelegAsync(Prognosenberechnung.ServiceReference1.Artikel artikel, Prognosenberechnung.ServiceReference1.Beleg beleg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateArtikelBeleg", ReplyAction="http://tempuri.org/IService1/updateArtikelBelegResponse")]
        void updateArtikelBeleg(Prognosenberechnung.ServiceReference1.ArtikelBeleg artikelbeleg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateArtikelBeleg", ReplyAction="http://tempuri.org/IService1/updateArtikelBelegResponse")]
        System.Threading.Tasks.Task updateArtikelBelegAsync(Prognosenberechnung.ServiceReference1.ArtikelBeleg artikelbeleg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelfromBelegId", ReplyAction="http://tempuri.org/IService1/getArtikelfromBelegIdResponse")]
        Prognosenberechnung.ServiceReference1.Artikel[] getArtikelfromBelegId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getArtikelfromBelegId", ReplyAction="http://tempuri.org/IService1/getArtikelfromBelegIdResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Artikel[]> getArtikelfromBelegIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getBelegfromArtikelId", ReplyAction="http://tempuri.org/IService1/getBelegfromArtikelIdResponse")]
        Prognosenberechnung.ServiceReference1.Beleg[] getBelegfromArtikelId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getBelegfromArtikelId", ReplyAction="http://tempuri.org/IService1/getBelegfromArtikelIdResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Beleg[]> getBelegfromArtikelIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getWarengruppebyId", ReplyAction="http://tempuri.org/IService1/getWarengruppebyIdResponse")]
        Prognosenberechnung.ServiceReference1.Warengruppe getWarengruppebyId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getWarengruppebyId", ReplyAction="http://tempuri.org/IService1/getWarengruppebyIdResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Warengruppe> getWarengruppebyIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setWarengruppe", ReplyAction="http://tempuri.org/IService1/setWarengruppeResponse")]
        void setWarengruppe(Prognosenberechnung.ServiceReference1.Warengruppe gruppe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setWarengruppe", ReplyAction="http://tempuri.org/IService1/setWarengruppeResponse")]
        System.Threading.Tasks.Task setWarengruppeAsync(Prognosenberechnung.ServiceReference1.Warengruppe gruppe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateWarengruppe", ReplyAction="http://tempuri.org/IService1/updateWarengruppeResponse")]
        void updateWarengruppe(Prognosenberechnung.ServiceReference1.Warengruppe warengruppe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateWarengruppe", ReplyAction="http://tempuri.org/IService1/updateWarengruppeResponse")]
        System.Threading.Tasks.Task updateWarengruppeAsync(Prognosenberechnung.ServiceReference1.Warengruppe warengruppe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getWarengruppeList", ReplyAction="http://tempuri.org/IService1/getWarengruppeListResponse")]
        Prognosenberechnung.ServiceReference1.Warengruppe[] getWarengruppeList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getWarengruppeList", ReplyAction="http://tempuri.org/IService1/getWarengruppeListResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Warengruppe[]> getWarengruppeListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getWarengruppebyName", ReplyAction="http://tempuri.org/IService1/getWarengruppebyNameResponse")]
        Prognosenberechnung.ServiceReference1.Warengruppe getWarengruppebyName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getWarengruppebyName", ReplyAction="http://tempuri.org/IService1/getWarengruppebyNameResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Warengruppe> getWarengruppebyNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPrognosebyId", ReplyAction="http://tempuri.org/IService1/getPrognosebyIdResponse")]
        Prognosenberechnung.ServiceReference1.Prognose getPrognosebyId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPrognosebyId", ReplyAction="http://tempuri.org/IService1/getPrognosebyIdResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Prognose> getPrognosebyIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setPrognose", ReplyAction="http://tempuri.org/IService1/setPrognoseResponse")]
        void setPrognose(Prognosenberechnung.ServiceReference1.Prognose prognose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setPrognose", ReplyAction="http://tempuri.org/IService1/setPrognoseResponse")]
        System.Threading.Tasks.Task setPrognoseAsync(Prognosenberechnung.ServiceReference1.Prognose prognose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updatePrognose", ReplyAction="http://tempuri.org/IService1/updatePrognoseResponse")]
        void updatePrognose(Prognosenberechnung.ServiceReference1.Prognose prognose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updatePrognose", ReplyAction="http://tempuri.org/IService1/updatePrognoseResponse")]
        System.Threading.Tasks.Task updatePrognoseAsync(Prognosenberechnung.ServiceReference1.Prognose prognose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPrognoseList", ReplyAction="http://tempuri.org/IService1/getPrognoseListResponse")]
        Prognosenberechnung.ServiceReference1.Prognose[] getPrognoseList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPrognoseList", ReplyAction="http://tempuri.org/IService1/getPrognoseListResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Prognose[]> getPrognoseListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPrognosebyArtikelId", ReplyAction="http://tempuri.org/IService1/getPrognosebyArtikelIdResponse")]
        Prognosenberechnung.ServiceReference1.Prognose getPrognosebyArtikelId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPrognosebyArtikelId", ReplyAction="http://tempuri.org/IService1/getPrognosebyArtikelIdResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Prognose> getPrognosebyArtikelIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPrognosebyDate", ReplyAction="http://tempuri.org/IService1/getPrognosebyDateResponse")]
        Prognosenberechnung.ServiceReference1.Prognose[] getPrognosebyDate(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPrognosebyDate", ReplyAction="http://tempuri.org/IService1/getPrognosebyDateResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Prognose[]> getPrognosebyDateAsync(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLieferartbyId", ReplyAction="http://tempuri.org/IService1/getLieferartbyIdResponse")]
        Prognosenberechnung.ServiceReference1.Lieferart getLieferartbyId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLieferartbyId", ReplyAction="http://tempuri.org/IService1/getLieferartbyIdResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Lieferart> getLieferartbyIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setLieferart", ReplyAction="http://tempuri.org/IService1/setLieferartResponse")]
        void setLieferart(Prognosenberechnung.ServiceReference1.Lieferart lieferart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setLieferart", ReplyAction="http://tempuri.org/IService1/setLieferartResponse")]
        System.Threading.Tasks.Task setLieferartAsync(Prognosenberechnung.ServiceReference1.Lieferart lieferart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateLieferart", ReplyAction="http://tempuri.org/IService1/updateLieferartResponse")]
        void updateLieferart(Prognosenberechnung.ServiceReference1.Lieferart lieferart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateLieferart", ReplyAction="http://tempuri.org/IService1/updateLieferartResponse")]
        System.Threading.Tasks.Task updateLieferartAsync(Prognosenberechnung.ServiceReference1.Lieferart lieferart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLieferartList", ReplyAction="http://tempuri.org/IService1/getLieferartListResponse")]
        Prognosenberechnung.ServiceReference1.Lieferart[] getLieferartList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLieferartList", ReplyAction="http://tempuri.org/IService1/getLieferartListResponse")]
        System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Lieferart[]> getLieferartListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Prognosenberechnung.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Prognosenberechnung.ServiceReference1.IService1>, Prognosenberechnung.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Prognosenberechnung.ServiceReference1.Personal getPersonalbyId(int id) {
            return base.Channel.getPersonalbyId(id);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Personal> getPersonalbyIdAsync(int id) {
            return base.Channel.getPersonalbyIdAsync(id);
        }
        
        public void setPersonal(Prognosenberechnung.ServiceReference1.Personal person) {
            base.Channel.setPersonal(person);
        }
        
        public System.Threading.Tasks.Task setPersonalAsync(Prognosenberechnung.ServiceReference1.Personal person) {
            return base.Channel.setPersonalAsync(person);
        }
        
        public void updatePersonal(Prognosenberechnung.ServiceReference1.Personal personal) {
            base.Channel.updatePersonal(personal);
        }
        
        public System.Threading.Tasks.Task updatePersonalAsync(Prognosenberechnung.ServiceReference1.Personal personal) {
            return base.Channel.updatePersonalAsync(personal);
        }
        
        public Prognosenberechnung.ServiceReference1.Personal[] getPersonalList() {
            return base.Channel.getPersonalList();
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Personal[]> getPersonalListAsync() {
            return base.Channel.getPersonalListAsync();
        }
        
        public Prognosenberechnung.ServiceReference1.Personal[] getPersonalbyRolleId(int id) {
            return base.Channel.getPersonalbyRolleId(id);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Personal[]> getPersonalbyRolleIdAsync(int id) {
            return base.Channel.getPersonalbyRolleIdAsync(id);
        }
        
        public Prognosenberechnung.ServiceReference1.Arbeitsvertrag getArbeitsvertragbyId(int id) {
            return base.Channel.getArbeitsvertragbyId(id);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Arbeitsvertrag> getArbeitsvertragbyIdAsync(int id) {
            return base.Channel.getArbeitsvertragbyIdAsync(id);
        }
        
        public void setArbeitsvertrag(Prognosenberechnung.ServiceReference1.Arbeitsvertrag vertrag) {
            base.Channel.setArbeitsvertrag(vertrag);
        }
        
        public System.Threading.Tasks.Task setArbeitsvertragAsync(Prognosenberechnung.ServiceReference1.Arbeitsvertrag vertrag) {
            return base.Channel.setArbeitsvertragAsync(vertrag);
        }
        
        public void updateArbeitsvertrag(Prognosenberechnung.ServiceReference1.Arbeitsvertrag arbeitsvertrag) {
            base.Channel.updateArbeitsvertrag(arbeitsvertrag);
        }
        
        public System.Threading.Tasks.Task updateArbeitsvertragAsync(Prognosenberechnung.ServiceReference1.Arbeitsvertrag arbeitsvertrag) {
            return base.Channel.updateArbeitsvertragAsync(arbeitsvertrag);
        }
        
        public Prognosenberechnung.ServiceReference1.Arbeitsvertrag[] getArbeitsvertragList() {
            return base.Channel.getArbeitsvertragList();
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Arbeitsvertrag[]> getArbeitsvertragListAsync() {
            return base.Channel.getArbeitsvertragListAsync();
        }
        
        public Prognosenberechnung.ServiceReference1.Rolle getRollebyId(int id) {
            return base.Channel.getRollebyId(id);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Rolle> getRollebyIdAsync(int id) {
            return base.Channel.getRollebyIdAsync(id);
        }
        
        public void setRolle(Prognosenberechnung.ServiceReference1.Rolle role) {
            base.Channel.setRolle(role);
        }
        
        public System.Threading.Tasks.Task setRolleAsync(Prognosenberechnung.ServiceReference1.Rolle role) {
            return base.Channel.setRolleAsync(role);
        }
        
        public void updateRolle(Prognosenberechnung.ServiceReference1.Rolle rolle) {
            base.Channel.updateRolle(rolle);
        }
        
        public System.Threading.Tasks.Task updateRolleAsync(Prognosenberechnung.ServiceReference1.Rolle rolle) {
            return base.Channel.updateRolleAsync(rolle);
        }
        
        public Prognosenberechnung.ServiceReference1.Rolle[] getRolleList() {
            return base.Channel.getRolleList();
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Rolle[]> getRolleListAsync() {
            return base.Channel.getRolleListAsync();
        }
        
        public Prognosenberechnung.ServiceReference1.Recht getRechtbyId(int id) {
            return base.Channel.getRechtbyId(id);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Recht> getRechtbyIdAsync(int id) {
            return base.Channel.getRechtbyIdAsync(id);
        }
        
        public void setRecht(Prognosenberechnung.ServiceReference1.Recht recht) {
            base.Channel.setRecht(recht);
        }
        
        public System.Threading.Tasks.Task setRechtAsync(Prognosenberechnung.ServiceReference1.Recht recht) {
            return base.Channel.setRechtAsync(recht);
        }
        
        public void updateRecht(Prognosenberechnung.ServiceReference1.Recht recht) {
            base.Channel.updateRecht(recht);
        }
        
        public System.Threading.Tasks.Task updateRechtAsync(Prognosenberechnung.ServiceReference1.Recht recht) {
            return base.Channel.updateRechtAsync(recht);
        }
        
        public void setRolleRecht(Prognosenberechnung.ServiceReference1.Rolle rolle, Prognosenberechnung.ServiceReference1.Recht recht) {
            base.Channel.setRolleRecht(rolle, recht);
        }
        
        public System.Threading.Tasks.Task setRolleRechtAsync(Prognosenberechnung.ServiceReference1.Rolle rolle, Prognosenberechnung.ServiceReference1.Recht recht) {
            return base.Channel.setRolleRechtAsync(rolle, recht);
        }
        
        public void updateRolleRecht(Prognosenberechnung.ServiceReference1.RolleRecht rollerecht) {
            base.Channel.updateRolleRecht(rollerecht);
        }
        
        public System.Threading.Tasks.Task updateRolleRechtAsync(Prognosenberechnung.ServiceReference1.RolleRecht rollerecht) {
            return base.Channel.updateRolleRechtAsync(rollerecht);
        }
        
        public Prognosenberechnung.ServiceReference1.Rolle[] getRollefromRechtId(int id) {
            return base.Channel.getRollefromRechtId(id);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Rolle[]> getRollefromRechtIdAsync(int id) {
            return base.Channel.getRollefromRechtIdAsync(id);
        }
        
        public Prognosenberechnung.ServiceReference1.Recht[] getRechtfromRolleId(int id) {
            return base.Channel.getRechtfromRolleId(id);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Recht[]> getRechtfromRolleIdAsync(int id) {
            return base.Channel.getRechtfromRolleIdAsync(id);
        }
        
        public Prognosenberechnung.ServiceReference1.Schicht getSchichtbyId(int id) {
            return base.Channel.getSchichtbyId(id);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Schicht> getSchichtbyIdAsync(int id) {
            return base.Channel.getSchichtbyIdAsync(id);
        }
        
        public void setSchicht(Prognosenberechnung.ServiceReference1.Schicht schicht) {
            base.Channel.setSchicht(schicht);
        }
        
        public System.Threading.Tasks.Task setSchichtAsync(Prognosenberechnung.ServiceReference1.Schicht schicht) {
            return base.Channel.setSchichtAsync(schicht);
        }
        
        public void updateSchicht(Prognosenberechnung.ServiceReference1.Schicht schicht) {
            base.Channel.updateSchicht(schicht);
        }
        
        public System.Threading.Tasks.Task updateSchichtAsync(Prognosenberechnung.ServiceReference1.Schicht schicht) {
            return base.Channel.updateSchichtAsync(schicht);
        }
        
        public Prognosenberechnung.ServiceReference1.Schicht[] getSchichtbyPersonalId(int id) {
            return base.Channel.getSchichtbyPersonalId(id);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Schicht[]> getSchichtbyPersonalIdAsync(int id) {
            return base.Channel.getSchichtbyPersonalIdAsync(id);
        }
        
        public Prognosenberechnung.ServiceReference1.Schicht[] getSchichtBetween(System.DateTime von, System.DateTime bis) {
            return base.Channel.getSchichtBetween(von, bis);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Schicht[]> getSchichtBetweenAsync(System.DateTime von, System.DateTime bis) {
            return base.Channel.getSchichtBetweenAsync(von, bis);
        }
        
        public Prognosenberechnung.ServiceReference1.Schicht[] getSchichtByPersonalIdAndBetween(int id, System.DateTime von, System.DateTime bis) {
            return base.Channel.getSchichtByPersonalIdAndBetween(id, von, bis);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Schicht[]> getSchichtByPersonalIdAndBetweenAsync(int id, System.DateTime von, System.DateTime bis) {
            return base.Channel.getSchichtByPersonalIdAndBetweenAsync(id, von, bis);
        }
        
        public Prognosenberechnung.ServiceReference1.Lieferant getLieferantbyId(int id) {
            return base.Channel.getLieferantbyId(id);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Lieferant> getLieferantbyIdAsync(int id) {
            return base.Channel.getLieferantbyIdAsync(id);
        }
        
        public void setLieferant(Prognosenberechnung.ServiceReference1.Lieferant lieferant) {
            base.Channel.setLieferant(lieferant);
        }
        
        public System.Threading.Tasks.Task setLieferantAsync(Prognosenberechnung.ServiceReference1.Lieferant lieferant) {
            return base.Channel.setLieferantAsync(lieferant);
        }
        
        public void updateLieferant(Prognosenberechnung.ServiceReference1.Lieferant lieferant) {
            base.Channel.updateLieferant(lieferant);
        }
        
        public System.Threading.Tasks.Task updateLieferantAsync(Prognosenberechnung.ServiceReference1.Lieferant lieferant) {
            return base.Channel.updateLieferantAsync(lieferant);
        }
        
        public Prognosenberechnung.ServiceReference1.Lieferant[] getLieferantList() {
            return base.Channel.getLieferantList();
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Lieferant[]> getLieferantListAsync() {
            return base.Channel.getLieferantListAsync();
        }
        
        public Prognosenberechnung.ServiceReference1.Artikel getArtikelbyId(int id) {
            return base.Channel.getArtikelbyId(id);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Artikel> getArtikelbyIdAsync(int id) {
            return base.Channel.getArtikelbyIdAsync(id);
        }
        
        public void setArtikel(Prognosenberechnung.ServiceReference1.Artikel artikel) {
            base.Channel.setArtikel(artikel);
        }
        
        public System.Threading.Tasks.Task setArtikelAsync(Prognosenberechnung.ServiceReference1.Artikel artikel) {
            return base.Channel.setArtikelAsync(artikel);
        }
        
        public void updateArtikel(Prognosenberechnung.ServiceReference1.Artikel artikel) {
            base.Channel.updateArtikel(artikel);
        }
        
        public System.Threading.Tasks.Task updateArtikelAsync(Prognosenberechnung.ServiceReference1.Artikel artikel) {
            return base.Channel.updateArtikelAsync(artikel);
        }
        
        public Prognosenberechnung.ServiceReference1.Artikel[] getArtikelList() {
            return base.Channel.getArtikelList();
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Artikel[]> getArtikelListAsync() {
            return base.Channel.getArtikelListAsync();
        }
        
        public Prognosenberechnung.ServiceReference1.Artikel[] getArtikelbyLieferantId(int id) {
            return base.Channel.getArtikelbyLieferantId(id);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Artikel[]> getArtikelbyLieferantIdAsync(int id) {
            return base.Channel.getArtikelbyLieferantIdAsync(id);
        }
        
        public Prognosenberechnung.ServiceReference1.Artikel[] getArtikelbyWarengruppeId(int id) {
            return base.Channel.getArtikelbyWarengruppeId(id);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Artikel[]> getArtikelbyWarengruppeIdAsync(int id) {
            return base.Channel.getArtikelbyWarengruppeIdAsync(id);
        }
        
        public Prognosenberechnung.ServiceReference1.Beleg getBelegbyId(int id) {
            return base.Channel.getBelegbyId(id);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Beleg> getBelegbyIdAsync(int id) {
            return base.Channel.getBelegbyIdAsync(id);
        }
        
        public void setBeleg(Prognosenberechnung.ServiceReference1.Beleg beleg) {
            base.Channel.setBeleg(beleg);
        }
        
        public System.Threading.Tasks.Task setBelegAsync(Prognosenberechnung.ServiceReference1.Beleg beleg) {
            return base.Channel.setBelegAsync(beleg);
        }
        
        public void updateBeleg(Prognosenberechnung.ServiceReference1.Beleg beleg) {
            base.Channel.updateBeleg(beleg);
        }
        
        public System.Threading.Tasks.Task updateBelegAsync(Prognosenberechnung.ServiceReference1.Beleg beleg) {
            return base.Channel.updateBelegAsync(beleg);
        }
        
        public Prognosenberechnung.ServiceReference1.Beleg[] getBelegList() {
            return base.Channel.getBelegList();
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Beleg[]> getBelegListAsync() {
            return base.Channel.getBelegListAsync();
        }
        
        public void setArtikelBeleg(Prognosenberechnung.ServiceReference1.Artikel artikel, Prognosenberechnung.ServiceReference1.Beleg beleg) {
            base.Channel.setArtikelBeleg(artikel, beleg);
        }
        
        public System.Threading.Tasks.Task setArtikelBelegAsync(Prognosenberechnung.ServiceReference1.Artikel artikel, Prognosenberechnung.ServiceReference1.Beleg beleg) {
            return base.Channel.setArtikelBelegAsync(artikel, beleg);
        }
        
        public void updateArtikelBeleg(Prognosenberechnung.ServiceReference1.ArtikelBeleg artikelbeleg) {
            base.Channel.updateArtikelBeleg(artikelbeleg);
        }
        
        public System.Threading.Tasks.Task updateArtikelBelegAsync(Prognosenberechnung.ServiceReference1.ArtikelBeleg artikelbeleg) {
            return base.Channel.updateArtikelBelegAsync(artikelbeleg);
        }
        
        public Prognosenberechnung.ServiceReference1.Artikel[] getArtikelfromBelegId(int id) {
            return base.Channel.getArtikelfromBelegId(id);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Artikel[]> getArtikelfromBelegIdAsync(int id) {
            return base.Channel.getArtikelfromBelegIdAsync(id);
        }
        
        public Prognosenberechnung.ServiceReference1.Beleg[] getBelegfromArtikelId(int id) {
            return base.Channel.getBelegfromArtikelId(id);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Beleg[]> getBelegfromArtikelIdAsync(int id) {
            return base.Channel.getBelegfromArtikelIdAsync(id);
        }
        
        public Prognosenberechnung.ServiceReference1.Warengruppe getWarengruppebyId(int id) {
            return base.Channel.getWarengruppebyId(id);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Warengruppe> getWarengruppebyIdAsync(int id) {
            return base.Channel.getWarengruppebyIdAsync(id);
        }
        
        public void setWarengruppe(Prognosenberechnung.ServiceReference1.Warengruppe gruppe) {
            base.Channel.setWarengruppe(gruppe);
        }
        
        public System.Threading.Tasks.Task setWarengruppeAsync(Prognosenberechnung.ServiceReference1.Warengruppe gruppe) {
            return base.Channel.setWarengruppeAsync(gruppe);
        }
        
        public void updateWarengruppe(Prognosenberechnung.ServiceReference1.Warengruppe warengruppe) {
            base.Channel.updateWarengruppe(warengruppe);
        }
        
        public System.Threading.Tasks.Task updateWarengruppeAsync(Prognosenberechnung.ServiceReference1.Warengruppe warengruppe) {
            return base.Channel.updateWarengruppeAsync(warengruppe);
        }
        
        public Prognosenberechnung.ServiceReference1.Warengruppe[] getWarengruppeList() {
            return base.Channel.getWarengruppeList();
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Warengruppe[]> getWarengruppeListAsync() {
            return base.Channel.getWarengruppeListAsync();
        }
        
        public Prognosenberechnung.ServiceReference1.Warengruppe getWarengruppebyName(string name) {
            return base.Channel.getWarengruppebyName(name);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Warengruppe> getWarengruppebyNameAsync(string name) {
            return base.Channel.getWarengruppebyNameAsync(name);
        }
        
        public Prognosenberechnung.ServiceReference1.Prognose getPrognosebyId(int id) {
            return base.Channel.getPrognosebyId(id);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Prognose> getPrognosebyIdAsync(int id) {
            return base.Channel.getPrognosebyIdAsync(id);
        }
        
        public void setPrognose(Prognosenberechnung.ServiceReference1.Prognose prognose) {
            base.Channel.setPrognose(prognose);
        }
        
        public System.Threading.Tasks.Task setPrognoseAsync(Prognosenberechnung.ServiceReference1.Prognose prognose) {
            return base.Channel.setPrognoseAsync(prognose);
        }
        
        public void updatePrognose(Prognosenberechnung.ServiceReference1.Prognose prognose) {
            base.Channel.updatePrognose(prognose);
        }
        
        public System.Threading.Tasks.Task updatePrognoseAsync(Prognosenberechnung.ServiceReference1.Prognose prognose) {
            return base.Channel.updatePrognoseAsync(prognose);
        }
        
        public Prognosenberechnung.ServiceReference1.Prognose[] getPrognoseList() {
            return base.Channel.getPrognoseList();
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Prognose[]> getPrognoseListAsync() {
            return base.Channel.getPrognoseListAsync();
        }
        
        public Prognosenberechnung.ServiceReference1.Prognose getPrognosebyArtikelId(int id) {
            return base.Channel.getPrognosebyArtikelId(id);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Prognose> getPrognosebyArtikelIdAsync(int id) {
            return base.Channel.getPrognosebyArtikelIdAsync(id);
        }
        
        public Prognosenberechnung.ServiceReference1.Prognose[] getPrognosebyDate(System.DateTime date) {
            return base.Channel.getPrognosebyDate(date);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Prognose[]> getPrognosebyDateAsync(System.DateTime date) {
            return base.Channel.getPrognosebyDateAsync(date);
        }
        
        public Prognosenberechnung.ServiceReference1.Lieferart getLieferartbyId(int id) {
            return base.Channel.getLieferartbyId(id);
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Lieferart> getLieferartbyIdAsync(int id) {
            return base.Channel.getLieferartbyIdAsync(id);
        }
        
        public void setLieferart(Prognosenberechnung.ServiceReference1.Lieferart lieferart) {
            base.Channel.setLieferart(lieferart);
        }
        
        public System.Threading.Tasks.Task setLieferartAsync(Prognosenberechnung.ServiceReference1.Lieferart lieferart) {
            return base.Channel.setLieferartAsync(lieferart);
        }
        
        public void updateLieferart(Prognosenberechnung.ServiceReference1.Lieferart lieferart) {
            base.Channel.updateLieferart(lieferart);
        }
        
        public System.Threading.Tasks.Task updateLieferartAsync(Prognosenberechnung.ServiceReference1.Lieferart lieferart) {
            return base.Channel.updateLieferartAsync(lieferart);
        }
        
        public Prognosenberechnung.ServiceReference1.Lieferart[] getLieferartList() {
            return base.Channel.getLieferartList();
        }
        
        public System.Threading.Tasks.Task<Prognosenberechnung.ServiceReference1.Lieferart[]> getLieferartListAsync() {
            return base.Channel.getLieferartListAsync();
        }
    }
}
